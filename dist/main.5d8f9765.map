{"version":3,"sources":["../node_modules/tslib/tslib.es6.js","../node_modules/roughjs/bin/path.js","../node_modules/roughjs/bin/geometry.js","../node_modules/roughjs/bin/utils/hachure.js","../node_modules/roughjs/bin/fillers/filler-utils.js","../node_modules/roughjs/bin/fillers/hachure-filler.js","../node_modules/roughjs/bin/fillers/zigzag-filler.js","../node_modules/roughjs/bin/fillers/hatch-filler.js","../node_modules/roughjs/bin/fillers/dot-filler.js","../node_modules/roughjs/bin/fillers/filler.js","../node_modules/roughjs/bin/renderer.js","../node_modules/roughjs/bin/renderer-factory.js","../node_modules/roughjs/bin/generator-base.js","../node_modules/roughjs/bin/generator.js","../node_modules/roughjs/bin/canvas-base.js","../node_modules/roughjs/bin/canvas.js","../node_modules/roughjs/bin/generator-async.js","../node_modules/roughjs/bin/canvas-async.js","../node_modules/roughjs/bin/svg-base.js","../node_modules/roughjs/bin/svg.js","../node_modules/roughjs/bin/svg-async.js","../node_modules/roughjs/bin/rough.js","../node_modules/webfontloader/webfontloader.js","../node_modules/@polymer/polymer/lib/utils/boot.js","../node_modules/@polymer/polymer/lib/utils/mixin.js","../node_modules/@polymer/polymer/lib/utils/async.js","../node_modules/@polymer/polymer/lib/mixins/properties-changed.js","../node_modules/@polymer/polymer/lib/mixins/properties-mixin.js","../node_modules/@polymer/polymer/lib/utils/case-map.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-html/lib/lit-extended.js","../node_modules/@polymer/lit-element/lit-element.js","../node_modules/wired-lib/wired-lib.js","../node_modules/wired-button/wired-button.js","../node_modules/wired-input/wired-input.js","diagram.ts","main.ts"],"names":["__extends","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","e","indexOf","getOwnPropertySymbols","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","next","rejected","step","result","done","then","body","_","f","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","m","exports","o","ar","error","concat","asyncIterator","q","a","resume","fulfill","settle","shift","cooked","raw","mod","__esModule","k","default","PathFitter","isType","token","type","PARAMS","ParsedPath","COMMAND","NUMBER","EOD","segments","parseData","processPoints","tokens","match","substr","RegExp","$1","text","parseFloat","tokenize","index","mode","param_length","params","numbeToken","segment","data","closed","_closed","toLowerCase","first","currentPoint","point","RoughPath","_position","_first","bezierReflectionPoint","quadReflectionPoint","parsed","linearPoints","_linearPoints","lp","points","x","position","RoughArcConverter","from","to","radii","angle","largeArcFlag","sweepFlag","_segIndex","_numSegs","_rx","_ry","_sinPhi","_cosPhi","_C","_theta","_delta","_T","_from","radPerDeg","Math","PI","abs","sin","cos","x1dash","y1dash","root","numerator","sqrt","cxdash","cydash","calculateVectorAngle","dtheta","ceil","cosTheta1","sinTheta1","theta2","cosTheta2","sinTheta2","cp1","cp2","ux","uy","vx","vy","ta","atan2","tb","sets","simplification","outSets","set","estLength","floor","reduce","p1","p2","pow","count","slice","areas","minArea","minIndex","distance","area","splice","Segment","xi","Number","MAX_VALUE","yi","px1","py1","px2","py2","_undefined","otherSegment","isUndefined","grad1","grad2","int1","int2","min","max","HachureIterator","top","bottom","left","right","gap","sinAngle","cosAngle","tanAngle","deltaX","hGap","pos","sLeft","sRight","line","xLower","xUpper","yLower","yUpper","intersects","lineLength","getIntersectingLines","affine","hachureLinesForPolygon","hachureLinesForEllipse","intersections","s1","s2","cx","cy","sinAnglePrime","cosAnglePrime","R","ret","hachureAngle","hachureGap","strokeWidth","tan","it","rect","nextLine","lines","width","height","renderer","rx","ry","getOffset","fweight","fillWeight","aspectRatio","hyp","gapPrime","halfLen","xPos","HachureFiller","_fillPolygon","_fillEllipse","connectEnds","renderLines","prevPoint","doubleLine","ZigZagFiller","HatchFiller","o2","set2","DotFiller","curveStepCount","dotsOnLines","dl","alpha","atan","l","dy","dx","ellipse","getFiller","fillers","fillerName","fillStyle","RoughRenderer","x1","y1","x2","y2","close","len","linearPath","polygon","o1","_curveWithOffset","roughness","increment","_ellipse","start","stop","roughClosure","strt","stp","ellipseInc","arcInc","_arc","path","replace","fitter","fit","prev","opList","_processSegment","offset","maxRandomnessOffset","filler","fillPolygon","fillEllipse","patternFillPolygon","random","_line","move","overlay","lengthSq","halfOffset","divergePoint","midDispX","bowing","midDispY","closePoint","curveTightness","cachedVertArray","ro","overlap","radOffset","_curve","ps","ros","setPosition","seg","prevSeg","delta","ob","_bezierTo","prevKey","ref","offset1","offset2","arcConverter","getNextSegment","createRenderer","hasSelf","self","roughScript","document","currentScript","src","config","workly","async","noWorker","worklySource","worklyURL","code","ourl","URL","createObjectURL","Blob","proxy","RoughGeneratorBase","surface","defaultOptions","options","_options","shape","lib","val","w","baseVal","size","ns","svg","createElementNS","setAttribute","pathNode","appendChild","bb","getBBox","removeChild","err","canvasSize","getCanvasSize","drawable","paths","drawing","opsToPath","stroke","fill","fillSketch","pattern","round","item","trim","RoughGenerator","_drawable","solidFillPolygon","rectangle","patternFillEllipse","diameter","arc","patternFillArc","curve","computePolygonSize","fillPoints","polygonPath","computePathSize","svgPath","RoughCanvasBase","hasDocument","canvas","ctx","getContext","getDefaultOptions","save","strokeStyle","lineWidth","_drawToContext","restore","p2d","Path2D","doc","ownerDocument","hcanvas","createElement","hcontext","bbox","computeBBox","translate","createPattern","beginPath","moveTo","bezierCurveTo","quadraticCurveTo","lineTo","RoughCanvas","gen","draw","circle","RoughGeneratorAsync","RoughCanvasAsync","genAsync","RoughSVGBase","defs","_defs","dnode","firstChild","insertBefore","style","id","MAX_SAFE_INTEGER","patternPath","RoughSVG","RoughSVGAsync","dedupeId","MixinFunction","__mixinApplications","__mixinSet","dedupingMixin","mixin","mixinApplications","WeakMap","mixinDedupeId","base","baseSet","map","extended","get","mixinSet","microTask","microtaskCurrHandle","microtaskLastHandle","microtaskCallbacks","microtaskNodeContent","microtaskNode","createTextNode","microtaskFlush","cb","window","MutationObserver","observe","characterData","timeOut","delay","fn","setTimeout","handle","clearTimeout","animationFrame","requestAnimationFrame","cancelAnimationFrame","idlePeriod","requestIdleCallback","cancelIdleCallback","callback","textContent","idx","Error","microtask","PropertiesChanged","superClass","createProperties","props","proto","prop","_createPropertyAccessor","attributeNameForProperty","property","typeForProperty","name","readOnly","_addPropertyToAttributeMap","__dataHasAccessor","_definePropertyAccessor","__dataAttributes","attr","_getProperty","_setProperty","__dataEnabled","__dataReady","__dataInvalid","__data","__dataPending","__dataOld","__dataInstanceProps","__serializing","_initializeProperties","_flushProperties","_setPendingProperty","_invalidateProperties","ext","old","changed","_shouldPropertyChange","run","_initializeInstanceProperties","ready","changedProps","_shouldPropertiesChange","_propertiesChanged","currentProps","oldProps","Boolean","namespace","_attributeToProperty","attributeChangedCallback","attribute","_deserializeValue","_valueToNodeAttribute","node","str","_serializeValue","undefined","removeAttribute","toString","normalizeProperties","output","PropertiesMixin","superPropertiesClass","superCtor","getPrototypeOf","ownProperties","JSCompiler_renameProperty","properties","__ownProperties","observedAttributes","_properties","keys","finalize","__finalized","_finalizeClass","__properties","info","connectedCallback","_enableProperties","disconnectedCallback","dashToCamelCase","camelToDashCase","caseMap","DASH_TO_CAMEL","CAMEL_TO_DASH","dash","toUpperCase","camel","defaultTemplateFactory","render","templateCaches","Map","html","strings","values","TemplateResult","SVGTemplateResult","partCallback","defaultPartCallback","isTextBinding","closing","findTagClose","nodeMarker","marker","template","innerHTML","getHTML","getTemplateElement","content","svgElement","templateCache","Template","container","templateFactory","instance","__templateInstance","_partCallback","update","TemplateInstance","fragment","_clone","String","markerRegex","lastAttributeNameRegex","lastIndexOf","open","TemplatePart","rawName","isTemplatePartActive","part","element","parts","walker","createTreeWalker","partIndex","nodesToRemove","previousNode","currentNode","nextNode","nodeType","hasAttributes","attributes","stringForPart","attributeNameInPart","exec","getNamedItem","stringsForAttributeValue","split","nodeValue","parent","parentNode","lastIndex","createComment","previousSibling","Node","TEXT_NODE","nextSibling","getValue","isDirective","noChange","directive","__litDirective","directiveValue","isPrimitiveValue","AttributePart","_previousValues","startIndex","isArray","_equalToPreviousValues","join","_interpolate","NodePart","startNode","endNode","_previousValue","_setText","_setTemplateResult","_setIterable","_setNode","_setPromise","clear","_insert","_getTemplate","itemParts","itemPart","itemStart","previousPart","setValue","lastPart","templatePart","getTemplate","_parts","valueIndex","cloneNode","partActive","reparentNodes","end","before","removeNodes","removeNodesFromTemplate","insertNodeIntoTemplate","walkerNodeFilter","NodeFilter","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","nextActiveIndexInTemplateParts","refNode","insertCount","walkerIndex","getTemplateCacheKey","scopeName","shadyTemplateFactory","cacheKey","ShadyCSS","prepareTemplateDom","TEMPLATE_TYPES","removeStylesFromLitTemplates","templates","styles","querySelectorAll","Set","shadyRenderSet","ensureStylesScoped","add","styleTemplate","prepareTemplateStyles","nativeShadow","querySelector","host","ShadowRoot","styleElement","extendedPartCallback","eventName","EventPart","lastChar","BooleanAttributePart","PropertyPart","listener","_listener","removeEventListener","addEventListener","event","handleEvent","renderAttributes","classString","styleString","attrInfo","getAttribute","hasAttribute","classInfo","styleInfo","LitElement","HTMLElement","__renderComplete","__resolveRenderComplete","__isInvalid","__isChanging","_root","_createRoot","_firstRendered","attachShadow","_props","_changedProps","_prevProps","shouldRender","_shouldRender","prevProps","_render","_applyRender","_didRender","change","trace","localName","renderComplete","__maxRandomnessOffset","__roughness","__bowing","__curveTightness","__curveStepCount","Wires","tagName","setAttributeNS","_svgNode","vertices","vCount","_continuousLine","WiresPath","_getOffset","existingPath","bcurveTo","overwrite","vertArray","vertArrayLength","cp1x","cp1y","cp2x","cp2y","wired","WiredButton","elevation","disabled","classList","_onDisableChange","remove","tabIndex","hasChildNodes","lastChild","keyCode","preventDefault","click","shadowRoot","getElementById","_clearNode","getBoundingClientRect","elev","h","opacity","customElements","define","WiredInput","delegatesFocus","placeholder","required","autocomplete","autofocus","minlength","maxlength","readonly","autocapitalize","autocorrect","_onChange","input","_value","stopPropagation","newEvent","CustomEvent","bubbles","composed","cancelable","detail","sourceEvent","dispatchEvent"],"mappings":"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","file":"main.5d8f9765.map","sourceRoot":"../src","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function isType(token, type) {\n    return token.type === type;\n}\nconst PARAMS = {\n    A: 7,\n    a: 7,\n    C: 6,\n    c: 6,\n    H: 1,\n    h: 1,\n    L: 2,\n    l: 2,\n    M: 2,\n    m: 2,\n    Q: 4,\n    q: 4,\n    S: 4,\n    s: 4,\n    T: 4,\n    t: 2,\n    V: 1,\n    v: 1,\n    Z: 0,\n    z: 0\n};\nclass ParsedPath {\n    constructor(d) {\n        this.COMMAND = 0;\n        this.NUMBER = 1;\n        this.EOD = 2;\n        this.segments = [];\n        this.parseData(d);\n        this.processPoints();\n    }\n    tokenize(d) {\n        const tokens = new Array();\n        while (d !== '') {\n            if (d.match(/^([ \\t\\r\\n,]+)/)) {\n                d = d.substr(RegExp.$1.length);\n            }\n            else if (d.match(/^([aAcChHlLmMqQsStTvVzZ])/)) {\n                tokens[tokens.length] = { type: this.COMMAND, text: RegExp.$1 };\n                d = d.substr(RegExp.$1.length);\n            }\n            else if (d.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/)) {\n                tokens[tokens.length] = { type: this.NUMBER, text: `${parseFloat(RegExp.$1)}` };\n                d = d.substr(RegExp.$1.length);\n            }\n            else {\n                console.error('Unrecognized segment command: ' + d);\n                return [];\n            }\n        }\n        tokens[tokens.length] = { type: this.EOD, text: '' };\n        return tokens;\n    }\n    parseData(d) {\n        const tokens = this.tokenize(d);\n        let index = 0;\n        let token = tokens[index];\n        let mode = 'BOD';\n        this.segments = new Array();\n        while (!isType(token, this.EOD)) {\n            let param_length;\n            const params = new Array();\n            if (mode === 'BOD') {\n                if (token.text === 'M' || token.text === 'm') {\n                    index++;\n                    param_length = PARAMS[token.text];\n                    mode = token.text;\n                }\n                else {\n                    this.parseData('M0,0' + d);\n                    return;\n                }\n            }\n            else {\n                if (isType(token, this.NUMBER)) {\n                    param_length = PARAMS[mode];\n                }\n                else {\n                    index++;\n                    param_length = PARAMS[token.text];\n                    mode = token.text;\n                }\n            }\n            if ((index + param_length) < tokens.length) {\n                for (let i = index; i < index + param_length; i++) {\n                    const numbeToken = tokens[i];\n                    if (isType(numbeToken, this.NUMBER)) {\n                        params[params.length] = +numbeToken.text;\n                    }\n                    else {\n                        console.error('Parameter type is not a number: ' + mode + ',' + numbeToken.text);\n                        return;\n                    }\n                }\n                if (typeof PARAMS[mode] === 'number') {\n                    const segment = { key: mode, data: params };\n                    this.segments.push(segment);\n                    index += param_length;\n                    token = tokens[index];\n                    if (mode === 'M')\n                        mode = 'L';\n                    if (mode === 'm')\n                        mode = 'l';\n                }\n                else {\n                    console.error('Unsupported segment type: ' + mode);\n                    return;\n                }\n            }\n            else {\n                console.error('Path data ended before all parameters were found');\n            }\n        }\n    }\n    get closed() {\n        if (typeof this._closed === 'undefined') {\n            this._closed = false;\n            for (const s of this.segments) {\n                if (s.key.toLowerCase() === 'z') {\n                    this._closed = true;\n                }\n            }\n        }\n        return this._closed;\n    }\n    processPoints() {\n        let first = null;\n        let currentPoint = [0, 0];\n        for (let i = 0; i < this.segments.length; i++) {\n            const s = this.segments[i];\n            switch (s.key) {\n                case 'M':\n                case 'L':\n                case 'T':\n                    s.point = [s.data[0], s.data[1]];\n                    break;\n                case 'm':\n                case 'l':\n                case 't':\n                    s.point = [s.data[0] + currentPoint[0], s.data[1] + currentPoint[1]];\n                    break;\n                case 'H':\n                    s.point = [s.data[0], currentPoint[1]];\n                    break;\n                case 'h':\n                    s.point = [s.data[0] + currentPoint[0], currentPoint[1]];\n                    break;\n                case 'V':\n                    s.point = [currentPoint[0], s.data[0]];\n                    break;\n                case 'v':\n                    s.point = [currentPoint[0], s.data[0] + currentPoint[1]];\n                    break;\n                case 'z':\n                case 'Z':\n                    if (first) {\n                        s.point = [first[0], first[1]];\n                    }\n                    break;\n                case 'C':\n                    s.point = [s.data[4], s.data[5]];\n                    break;\n                case 'c':\n                    s.point = [s.data[4] + currentPoint[0], s.data[5] + currentPoint[1]];\n                    break;\n                case 'S':\n                    s.point = [s.data[2], s.data[3]];\n                    break;\n                case 's':\n                    s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n                    break;\n                case 'Q':\n                    s.point = [s.data[2], s.data[3]];\n                    break;\n                case 'q':\n                    s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n                    break;\n                case 'A':\n                    s.point = [s.data[5], s.data[6]];\n                    break;\n                case 'a':\n                    s.point = [s.data[5] + currentPoint[0], s.data[6] + currentPoint[1]];\n                    break;\n            }\n            if (s.key === 'm' || s.key === 'M') {\n                first = null;\n            }\n            if (s.point) {\n                currentPoint = s.point;\n                if (!first) {\n                    first = s.point;\n                }\n            }\n            if (s.key === 'z' || s.key === 'Z') {\n                first = null;\n            }\n        }\n    }\n}\nexport class RoughPath {\n    constructor(d) {\n        this._position = [0, 0];\n        this._first = null;\n        this.bezierReflectionPoint = null;\n        this.quadReflectionPoint = null;\n        this.parsed = new ParsedPath(d);\n    }\n    get segments() {\n        return this.parsed.segments;\n    }\n    get closed() {\n        return this.parsed.closed;\n    }\n    get linearPoints() {\n        if (!this._linearPoints) {\n            const lp = [];\n            let points = [];\n            for (const s of this.parsed.segments) {\n                const key = s.key.toLowerCase();\n                if (key === 'm' || key === 'z') {\n                    if (points.length) {\n                        lp.push(points);\n                        points = [];\n                    }\n                    if (key === 'z') {\n                        continue;\n                    }\n                }\n                if (s.point) {\n                    points.push(s.point);\n                }\n            }\n            if (points.length) {\n                lp.push(points);\n                points = [];\n            }\n            this._linearPoints = lp;\n        }\n        return this._linearPoints;\n    }\n    get first() {\n        return this._first;\n    }\n    set first(v) {\n        this._first = v;\n    }\n    setPosition(x, y) {\n        this._position = [x, y];\n        if (!this._first) {\n            this._first = [x, y];\n        }\n    }\n    get position() {\n        return this._position;\n    }\n    get x() {\n        return this._position[0];\n    }\n    get y() {\n        return this._position[1];\n    }\n}\n// Algorithm as described in https://www.w3.org/TR/SVG/implnote.html\n// Code adapted from nsSVGPathDataParser.cpp in Mozilla \n// https://hg.mozilla.org/mozilla-central/file/17156fbebbc8/content/svg/content/src/nsSVGPathDataParser.cpp#l887\nexport class RoughArcConverter {\n    constructor(from, to, radii, angle, largeArcFlag, sweepFlag) {\n        this._segIndex = 0;\n        this._numSegs = 0;\n        this._rx = 0;\n        this._ry = 0;\n        this._sinPhi = 0;\n        this._cosPhi = 0;\n        this._C = [0, 0];\n        this._theta = 0;\n        this._delta = 0;\n        this._T = 0;\n        this._from = from;\n        if (from[0] === to[0] && from[1] === to[1]) {\n            return;\n        }\n        const radPerDeg = Math.PI / 180;\n        this._rx = Math.abs(radii[0]);\n        this._ry = Math.abs(radii[1]);\n        this._sinPhi = Math.sin(angle * radPerDeg);\n        this._cosPhi = Math.cos(angle * radPerDeg);\n        const x1dash = this._cosPhi * (from[0] - to[0]) / 2.0 + this._sinPhi * (from[1] - to[1]) / 2.0;\n        const y1dash = -this._sinPhi * (from[0] - to[0]) / 2.0 + this._cosPhi * (from[1] - to[1]) / 2.0;\n        let root = 0;\n        const numerator = this._rx * this._rx * this._ry * this._ry - this._rx * this._rx * y1dash * y1dash - this._ry * this._ry * x1dash * x1dash;\n        if (numerator < 0) {\n            const s = Math.sqrt(1 - (numerator / (this._rx * this._rx * this._ry * this._ry)));\n            this._rx = this._rx * s;\n            this._ry = this._ry * s;\n            root = 0;\n        }\n        else {\n            root = (largeArcFlag === sweepFlag ? -1.0 : 1.0) *\n                Math.sqrt(numerator / (this._rx * this._rx * y1dash * y1dash + this._ry * this._ry * x1dash * x1dash));\n        }\n        const cxdash = root * this._rx * y1dash / this._ry;\n        const cydash = -root * this._ry * x1dash / this._rx;\n        this._C = [0, 0];\n        this._C[0] = this._cosPhi * cxdash - this._sinPhi * cydash + (from[0] + to[0]) / 2.0;\n        this._C[1] = this._sinPhi * cxdash + this._cosPhi * cydash + (from[1] + to[1]) / 2.0;\n        this._theta = this.calculateVectorAngle(1.0, 0.0, (x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry);\n        let dtheta = this.calculateVectorAngle((x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry, (-x1dash - cxdash) / this._rx, (-y1dash - cydash) / this._ry);\n        if ((!sweepFlag) && (dtheta > 0)) {\n            dtheta -= 2 * Math.PI;\n        }\n        else if (sweepFlag && (dtheta < 0)) {\n            dtheta += 2 * Math.PI;\n        }\n        this._numSegs = Math.ceil(Math.abs(dtheta / (Math.PI / 2)));\n        this._delta = dtheta / this._numSegs;\n        this._T = (8 / 3) * Math.sin(this._delta / 4) * Math.sin(this._delta / 4) / Math.sin(this._delta / 2);\n    }\n    getNextSegment() {\n        if (this._segIndex === this._numSegs) {\n            return null;\n        }\n        const cosTheta1 = Math.cos(this._theta);\n        const sinTheta1 = Math.sin(this._theta);\n        const theta2 = this._theta + this._delta;\n        const cosTheta2 = Math.cos(theta2);\n        const sinTheta2 = Math.sin(theta2);\n        const to = [\n            this._cosPhi * this._rx * cosTheta2 - this._sinPhi * this._ry * sinTheta2 + this._C[0],\n            this._sinPhi * this._rx * cosTheta2 + this._cosPhi * this._ry * sinTheta2 + this._C[1]\n        ];\n        const cp1 = [\n            this._from[0] + this._T * (-this._cosPhi * this._rx * sinTheta1 - this._sinPhi * this._ry * cosTheta1),\n            this._from[1] + this._T * (-this._sinPhi * this._rx * sinTheta1 + this._cosPhi * this._ry * cosTheta1)\n        ];\n        const cp2 = [\n            to[0] + this._T * (this._cosPhi * this._rx * sinTheta2 + this._sinPhi * this._ry * cosTheta2),\n            to[1] + this._T * (this._sinPhi * this._rx * sinTheta2 - this._cosPhi * this._ry * cosTheta2)\n        ];\n        this._theta = theta2;\n        this._from = [to[0], to[1]];\n        this._segIndex++;\n        return {\n            cp1: cp1,\n            cp2: cp2,\n            to: to\n        };\n    }\n    calculateVectorAngle(ux, uy, vx, vy) {\n        const ta = Math.atan2(uy, ux);\n        const tb = Math.atan2(vy, vx);\n        if (tb >= ta)\n            return tb - ta;\n        return 2 * Math.PI - (ta - tb);\n    }\n}\nexport class PathFitter {\n    constructor(sets, closed) {\n        this.sets = sets;\n        this.closed = closed;\n    }\n    fit(simplification) {\n        const outSets = [];\n        for (const set of this.sets) {\n            const length = set.length;\n            let estLength = Math.floor(simplification * length);\n            if (estLength < 5) {\n                if (length <= 5) {\n                    continue;\n                }\n                estLength = 5;\n            }\n            outSets.push(this.reduce(set, estLength));\n        }\n        let d = '';\n        for (const set of outSets) {\n            for (let i = 0; i < set.length; i++) {\n                const point = set[i];\n                if (i === 0) {\n                    d += 'M' + point[0] + ',' + point[1];\n                }\n                else {\n                    d += 'L' + point[0] + ',' + point[1];\n                }\n            }\n            if (this.closed) {\n                d += 'z ';\n            }\n        }\n        return d;\n    }\n    distance(p1, p2) {\n        return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n    }\n    reduce(set, count) {\n        if (set.length <= count) {\n            return set;\n        }\n        const points = set.slice(0);\n        while (points.length > count) {\n            const areas = [];\n            let minArea = -1;\n            let minIndex = -1;\n            for (let i = 1; i < (points.length - 1); i++) {\n                const a = this.distance(points[i - 1], points[i]);\n                const b = this.distance(points[i], points[i + 1]);\n                const c = this.distance(points[i - 1], points[i + 1]);\n                const s = (a + b + c) / 2.0;\n                const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n                areas.push(area);\n                if ((minArea < 0) || (area < minArea)) {\n                    minArea = area;\n                    minIndex = i;\n                }\n            }\n            if (minIndex > 0) {\n                points.splice(minIndex, 1);\n            }\n            else {\n                break;\n            }\n        }\n        return points;\n    }\n}\n","export class Segment {\n    constructor(p1, p2) {\n        this.xi = Number.MAX_VALUE;\n        this.yi = Number.MAX_VALUE;\n        this.px1 = p1[0];\n        this.py1 = p1[1];\n        this.px2 = p2[0];\n        this.py2 = p2[1];\n        this.a = this.py2 - this.py1;\n        this.b = this.px1 - this.px2;\n        this.c = this.px2 * this.py1 - this.px1 * this.py2;\n        this._undefined = ((this.a === 0) && (this.b === 0) && (this.c === 0));\n    }\n    isUndefined() {\n        return this._undefined;\n    }\n    intersects(otherSegment) {\n        if (this.isUndefined() || otherSegment.isUndefined()) {\n            return false;\n        }\n        let grad1 = Number.MAX_VALUE;\n        let grad2 = Number.MAX_VALUE;\n        let int1 = 0, int2 = 0;\n        const a = this.a, b = this.b, c = this.c;\n        if (Math.abs(b) > 0.00001) {\n            grad1 = -a / b;\n            int1 = -c / b;\n        }\n        if (Math.abs(otherSegment.b) > 0.00001) {\n            grad2 = -otherSegment.a / otherSegment.b;\n            int2 = -otherSegment.c / otherSegment.b;\n        }\n        if (grad1 === Number.MAX_VALUE) {\n            if (grad2 === Number.MAX_VALUE) {\n                if ((-c / a) !== (-otherSegment.c / otherSegment.a)) {\n                    return false;\n                }\n                if ((this.py1 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n                    this.xi = this.px1;\n                    this.yi = this.py1;\n                    return true;\n                }\n                if ((this.py2 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py2 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n                    this.xi = this.px2;\n                    this.yi = this.py2;\n                    return true;\n                }\n                return false;\n            }\n            this.xi = this.px1;\n            this.yi = (grad2 * this.xi + int2);\n            if (((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001) || ((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001)) {\n                return false;\n            }\n            if (Math.abs(otherSegment.a) < 0.00001) {\n                if ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001) {\n                    return false;\n                }\n                return true;\n            }\n            return true;\n        }\n        if (grad2 === Number.MAX_VALUE) {\n            this.xi = otherSegment.px1;\n            this.yi = grad1 * this.xi + int1;\n            if (((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001) || ((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001)) {\n                return false;\n            }\n            if (Math.abs(a) < 0.00001) {\n                if ((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) {\n                    return false;\n                }\n                return true;\n            }\n            return true;\n        }\n        if (grad1 === grad2) {\n            if (int1 !== int2) {\n                return false;\n            }\n            if ((this.px1 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n                this.xi = this.px1;\n                this.yi = this.py1;\n                return true;\n            }\n            if ((this.px2 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px2 <= Math.max(otherSegment.px1, otherSegment.px2))) {\n                this.xi = this.px2;\n                this.yi = this.py2;\n                return true;\n            }\n            return false;\n        }\n        this.xi = ((int2 - int1) / (grad1 - grad2));\n        this.yi = (grad1 * this.xi + int1);\n        if (((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) || ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001)) {\n            return false;\n        }\n        return true;\n    }\n}\n","import { Segment } from '../geometry';\nexport class HachureIterator {\n    constructor(top, bottom, left, right, gap, sinAngle, cosAngle, tanAngle) {\n        this.deltaX = 0;\n        this.hGap = 0;\n        this.top = top;\n        this.bottom = bottom;\n        this.left = left;\n        this.right = right;\n        this.gap = gap;\n        this.sinAngle = sinAngle;\n        this.tanAngle = tanAngle;\n        if (Math.abs(sinAngle) < 0.0001) {\n            this.pos = left + gap;\n        }\n        else if (Math.abs(sinAngle) > 0.9999) {\n            this.pos = top + gap;\n        }\n        else {\n            this.deltaX = (bottom - top) * Math.abs(tanAngle);\n            this.pos = left - Math.abs(this.deltaX);\n            this.hGap = Math.abs(gap / cosAngle);\n            this.sLeft = new Segment([left, bottom], [left, top]);\n            this.sRight = new Segment([right, bottom], [right, top]);\n        }\n    }\n    nextLine() {\n        if (Math.abs(this.sinAngle) < 0.0001) {\n            if (this.pos < this.right) {\n                const line = [this.pos, this.top, this.pos, this.bottom];\n                this.pos += this.gap;\n                return line;\n            }\n        }\n        else if (Math.abs(this.sinAngle) > 0.9999) {\n            if (this.pos < this.bottom) {\n                const line = [this.left, this.pos, this.right, this.pos];\n                this.pos += this.gap;\n                return line;\n            }\n        }\n        else {\n            let xLower = this.pos - this.deltaX / 2;\n            let xUpper = this.pos + this.deltaX / 2;\n            let yLower = this.bottom;\n            let yUpper = this.top;\n            if (this.pos < (this.right + this.deltaX)) {\n                while (((xLower < this.left) && (xUpper < this.left)) || ((xLower > this.right) && (xUpper > this.right))) {\n                    this.pos += this.hGap;\n                    xLower = this.pos - this.deltaX / 2;\n                    xUpper = this.pos + this.deltaX / 2;\n                    if (this.pos > (this.right + this.deltaX)) {\n                        return null;\n                    }\n                }\n                const s = new Segment([xLower, yLower], [xUpper, yUpper]);\n                if (this.sLeft && s.intersects(this.sLeft)) {\n                    xLower = s.xi;\n                    yLower = s.yi;\n                }\n                if (this.sRight && s.intersects(this.sRight)) {\n                    xUpper = s.xi;\n                    yUpper = s.yi;\n                }\n                if (this.tanAngle > 0) {\n                    xLower = this.right - (xLower - this.left);\n                    xUpper = this.right - (xUpper - this.left);\n                }\n                const line = [xLower, yLower, xUpper, yUpper];\n                this.pos += this.hGap;\n                return line;\n            }\n        }\n        return null;\n    }\n}\n","import { Segment } from '../geometry';\nimport { HachureIterator } from '../utils/hachure';\nexport function lineLength(line) {\n    const p1 = line[0];\n    const p2 = line[1];\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\nexport function getIntersectingLines(line, points) {\n    const intersections = [];\n    const s1 = new Segment([line[0], line[1]], [line[2], line[3]]);\n    for (let i = 0; i < points.length; i++) {\n        const s2 = new Segment(points[i], points[(i + 1) % points.length]);\n        if (s1.intersects(s2)) {\n            intersections.push([s1.xi, s1.yi]);\n        }\n    }\n    return intersections;\n}\nexport function affine(x, y, cx, cy, sinAnglePrime, cosAnglePrime, R) {\n    const A = -cx * cosAnglePrime - cy * sinAnglePrime + cx;\n    const B = R * (cx * sinAnglePrime - cy * cosAnglePrime) + cy;\n    const C = cosAnglePrime;\n    const D = sinAnglePrime;\n    const E = -R * sinAnglePrime;\n    const F = R * cosAnglePrime;\n    return [\n        A + C * x + D * y,\n        B + E * x + F * y\n    ];\n}\nexport function hachureLinesForPolygon(points, o) {\n    const ret = [];\n    if (points && points.length) {\n        let left = points[0][0];\n        let right = points[0][0];\n        let top = points[0][1];\n        let bottom = points[0][1];\n        for (let i = 1; i < points.length; i++) {\n            left = Math.min(left, points[i][0]);\n            right = Math.max(right, points[i][0]);\n            top = Math.min(top, points[i][1]);\n            bottom = Math.max(bottom, points[i][1]);\n        }\n        const angle = o.hachureAngle;\n        let gap = o.hachureGap;\n        if (gap < 0) {\n            gap = o.strokeWidth * 4;\n        }\n        gap = Math.max(gap, 0.1);\n        const radPerDeg = Math.PI / 180;\n        const hachureAngle = (angle % 180) * radPerDeg;\n        const cosAngle = Math.cos(hachureAngle);\n        const sinAngle = Math.sin(hachureAngle);\n        const tanAngle = Math.tan(hachureAngle);\n        const it = new HachureIterator(top - 1, bottom + 1, left - 1, right + 1, gap, sinAngle, cosAngle, tanAngle);\n        let rect;\n        while ((rect = it.nextLine()) != null) {\n            const lines = getIntersectingLines(rect, points);\n            for (let i = 0; i < lines.length; i++) {\n                if (i < (lines.length - 1)) {\n                    const p1 = lines[i];\n                    const p2 = lines[i + 1];\n                    ret.push([p1, p2]);\n                }\n            }\n        }\n    }\n    return ret;\n}\nexport function hachureLinesForEllipse(cx, cy, width, height, o, renderer) {\n    const ret = [];\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += renderer.getOffset(-rx * 0.05, rx * 0.05, o);\n    ry += renderer.getOffset(-ry * 0.05, ry * 0.05, o);\n    const angle = o.hachureAngle;\n    let gap = o.hachureGap;\n    if (gap <= 0) {\n        gap = o.strokeWidth * 4;\n    }\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n        fweight = o.strokeWidth / 2;\n    }\n    const radPerDeg = Math.PI / 180;\n    const hachureAngle = (angle % 180) * radPerDeg;\n    const tanAngle = Math.tan(hachureAngle);\n    const aspectRatio = ry / rx;\n    const hyp = Math.sqrt(aspectRatio * tanAngle * aspectRatio * tanAngle + 1);\n    const sinAnglePrime = aspectRatio * tanAngle / hyp;\n    const cosAnglePrime = 1 / hyp;\n    const gapPrime = gap / ((rx * ry / Math.sqrt((ry * cosAnglePrime) * (ry * cosAnglePrime) + (rx * sinAnglePrime) * (rx * sinAnglePrime))) / rx);\n    let halfLen = Math.sqrt((rx * rx) - (cx - rx + gapPrime) * (cx - rx + gapPrime));\n    for (let xPos = cx - rx + gapPrime; xPos < cx + rx; xPos += gapPrime) {\n        halfLen = Math.sqrt((rx * rx) - (cx - xPos) * (cx - xPos));\n        const p1 = affine(xPos, cy - halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n        const p2 = affine(xPos, cy + halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n        ret.push([p1, p2]);\n    }\n    return ret;\n}\n","import { hachureLinesForPolygon, hachureLinesForEllipse } from './filler-utils';\nexport class HachureFiller {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    fillPolygon(points, o) {\n        return this._fillPolygon(points, o);\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        return this._fillEllipse(cx, cy, width, height, o);\n    }\n    _fillPolygon(points, o, connectEnds = false) {\n        const lines = hachureLinesForPolygon(points, o);\n        const ops = this.renderLines(lines, o, connectEnds);\n        return { type: 'fillSketch', ops };\n    }\n    _fillEllipse(cx, cy, width, height, o, connectEnds = false) {\n        const lines = hachureLinesForEllipse(cx, cy, width, height, o, this.renderer);\n        const ops = this.renderLines(lines, o, connectEnds);\n        return { type: 'fillSketch', ops };\n    }\n    renderLines(lines, o, connectEnds) {\n        let ops = [];\n        let prevPoint = null;\n        for (const line of lines) {\n            ops = ops.concat(this.renderer.doubleLine(line[0][0], line[0][1], line[1][0], line[1][1], o));\n            if (connectEnds && prevPoint) {\n                ops = ops.concat(this.renderer.doubleLine(prevPoint[0], prevPoint[1], line[0][0], line[0][1], o));\n            }\n            prevPoint = line[1];\n        }\n        return ops;\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nexport class ZigZagFiller extends HachureFiller {\n    fillPolygon(points, o) {\n        return this._fillPolygon(points, o, true);\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        return this._fillEllipse(cx, cy, width, height, o, true);\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nexport class HatchFiller extends HachureFiller {\n    fillPolygon(points, o) {\n        const set = this._fillPolygon(points, o);\n        const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n        const set2 = this._fillPolygon(points, o2);\n        set.ops = set.ops.concat(set2.ops);\n        return set;\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        const set = this._fillEllipse(cx, cy, width, height, o);\n        const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n        const set2 = this._fillEllipse(cx, cy, width, height, o2);\n        set.ops = set.ops.concat(set2.ops);\n        return set;\n    }\n}\n","import { hachureLinesForPolygon, hachureLinesForEllipse, lineLength } from './filler-utils';\nexport class DotFiller {\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    fillPolygon(points, o) {\n        o = Object.assign({}, o, { curveStepCount: 4, hachureAngle: 0 });\n        const lines = hachureLinesForPolygon(points, o);\n        return this.dotsOnLines(lines, o);\n    }\n    fillEllipse(cx, cy, width, height, o) {\n        o = Object.assign({}, o, { curveStepCount: 4, hachureAngle: 0 });\n        const lines = hachureLinesForEllipse(cx, cy, width, height, o, this.renderer);\n        return this.dotsOnLines(lines, o);\n    }\n    dotsOnLines(lines, o) {\n        let ops = [];\n        let gap = o.hachureGap;\n        if (gap < 0) {\n            gap = o.strokeWidth * 4;\n        }\n        gap = Math.max(gap, 0.1);\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        for (const line of lines) {\n            const length = lineLength(line);\n            const dl = length / gap;\n            const count = Math.ceil(dl) - 1;\n            const alpha = Math.atan((line[1][1] - line[0][1]) / (line[1][0] - line[0][0]));\n            for (let i = 0; i < count; i++) {\n                const l = gap * (i + 1);\n                const dy = l * Math.sin(alpha);\n                const dx = l * Math.cos(alpha);\n                const c = [line[0][0] - dx, line[0][1] + dy];\n                const cx = this.renderer.getOffset(c[0] - gap / 4, c[0] + gap / 4, o);\n                const cy = this.renderer.getOffset(c[1] - gap / 4, c[1] + gap / 4, o);\n                const ellipse = this.renderer.ellipse(cx, cy, fweight, fweight, o);\n                ops = ops.concat(ellipse.ops);\n            }\n        }\n        return { type: 'fillSketch', ops };\n    }\n}\n","import { HachureFiller } from './hachure-filler';\nimport { ZigZagFiller } from './zigzag-filler';\nimport { HatchFiller } from './hatch-filler';\nimport { DotFiller } from './dot-filler';\nconst fillers = {};\nexport function getFiller(renderer, o) {\n    let fillerName = o.fillStyle || 'hachure';\n    if (!fillers[fillerName]) {\n        switch (fillerName) {\n            case 'zigzag':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new ZigZagFiller(renderer);\n                }\n                break;\n            case 'cross-hatch':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new HatchFiller(renderer);\n                }\n                break;\n            case 'dots':\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new DotFiller(renderer);\n                }\n                break;\n            case 'hachure':\n            default:\n                fillerName = 'hachure';\n                if (!fillers[fillerName]) {\n                    fillers[fillerName] = new HachureFiller(renderer);\n                }\n                break;\n        }\n    }\n    return fillers[fillerName];\n}\n","import { RoughPath, RoughArcConverter, PathFitter } from './path.js';\nimport { getFiller } from './fillers/filler';\nexport class RoughRenderer {\n    line(x1, y1, x2, y2, o) {\n        const ops = this.doubleLine(x1, y1, x2, y2, o);\n        return { type: 'path', ops };\n    }\n    linearPath(points, close, o) {\n        const len = (points || []).length;\n        if (len > 2) {\n            let ops = [];\n            for (let i = 0; i < (len - 1); i++) {\n                ops = ops.concat(this.doubleLine(points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], o));\n            }\n            if (close) {\n                ops = ops.concat(this.doubleLine(points[len - 1][0], points[len - 1][1], points[0][0], points[0][1], o));\n            }\n            return { type: 'path', ops };\n        }\n        else if (len === 2) {\n            return this.line(points[0][0], points[0][1], points[1][0], points[1][1], o);\n        }\n        return { type: 'path', ops: [] };\n    }\n    polygon(points, o) {\n        return this.linearPath(points, true, o);\n    }\n    rectangle(x, y, width, height, o) {\n        const points = [\n            [x, y], [x + width, y], [x + width, y + height], [x, y + height]\n        ];\n        return this.polygon(points, o);\n    }\n    curve(points, o) {\n        const o1 = this._curveWithOffset(points, 1 * (1 + o.roughness * 0.2), o);\n        const o2 = this._curveWithOffset(points, 1.5 * (1 + o.roughness * 0.22), o);\n        return { type: 'path', ops: o1.concat(o2) };\n    }\n    ellipse(x, y, width, height, o) {\n        const increment = (Math.PI * 2) / o.curveStepCount;\n        let rx = Math.abs(width / 2);\n        let ry = Math.abs(height / 2);\n        rx += this.getOffset(-rx * 0.05, rx * 0.05, o);\n        ry += this.getOffset(-ry * 0.05, ry * 0.05, o);\n        const o1 = this._ellipse(increment, x, y, rx, ry, 1, increment * this.getOffset(0.1, this.getOffset(0.4, 1, o), o), o);\n        const o2 = this._ellipse(increment, x, y, rx, ry, 1.5, 0, o);\n        return { type: 'path', ops: o1.concat(o2) };\n    }\n    arc(x, y, width, height, start, stop, closed, roughClosure, o) {\n        const cx = x;\n        const cy = y;\n        let rx = Math.abs(width / 2);\n        let ry = Math.abs(height / 2);\n        rx += this.getOffset(-rx * 0.01, rx * 0.01, o);\n        ry += this.getOffset(-ry * 0.01, ry * 0.01, o);\n        let strt = start;\n        let stp = stop;\n        while (strt < 0) {\n            strt += Math.PI * 2;\n            stp += Math.PI * 2;\n        }\n        if ((stp - strt) > (Math.PI * 2)) {\n            strt = 0;\n            stp = Math.PI * 2;\n        }\n        const ellipseInc = (Math.PI * 2) / o.curveStepCount;\n        const arcInc = Math.min(ellipseInc / 2, (stp - strt) / 2);\n        const o1 = this._arc(arcInc, cx, cy, rx, ry, strt, stp, 1, o);\n        const o2 = this._arc(arcInc, cx, cy, rx, ry, strt, stp, 1.5, o);\n        let ops = o1.concat(o2);\n        if (closed) {\n            if (roughClosure) {\n                ops = ops.concat(this.doubleLine(cx, cy, cx + rx * Math.cos(strt), cy + ry * Math.sin(strt), o));\n                ops = ops.concat(this.doubleLine(cx, cy, cx + rx * Math.cos(stp), cy + ry * Math.sin(stp), o));\n            }\n            else {\n                ops.push({ op: 'lineTo', data: [cx, cy] });\n                ops.push({ op: 'lineTo', data: [cx + rx * Math.cos(strt), cy + ry * Math.sin(strt)] });\n            }\n        }\n        return { type: 'path', ops };\n    }\n    svgPath(path, o) {\n        path = (path || '').replace(/\\n/g, ' ').replace(/(-\\s)/g, '-').replace('/(\\s\\s)/g', ' ');\n        let p = new RoughPath(path);\n        if (o.simplification) {\n            const fitter = new PathFitter(p.linearPoints, p.closed);\n            const d = fitter.fit(o.simplification);\n            p = new RoughPath(d);\n        }\n        let ops = [];\n        const segments = p.segments || [];\n        for (let i = 0; i < segments.length; i++) {\n            const s = segments[i];\n            const prev = i > 0 ? segments[i - 1] : null;\n            const opList = this._processSegment(p, s, prev, o);\n            if (opList && opList.length) {\n                ops = ops.concat(opList);\n            }\n        }\n        return { type: 'path', ops };\n    }\n    solidFillPolygon(points, o) {\n        const ops = [];\n        if (points.length) {\n            const offset = o.maxRandomnessOffset || 0;\n            const len = points.length;\n            if (len > 2) {\n                ops.push({ op: 'move', data: [points[0][0] + this.getOffset(-offset, offset, o), points[0][1] + this.getOffset(-offset, offset, o)] });\n                for (let i = 1; i < len; i++) {\n                    ops.push({ op: 'lineTo', data: [points[i][0] + this.getOffset(-offset, offset, o), points[i][1] + this.getOffset(-offset, offset, o)] });\n                }\n            }\n        }\n        return { type: 'fillPath', ops };\n    }\n    patternFillPolygon(points, o) {\n        const filler = getFiller(this, o);\n        return filler.fillPolygon(points, o);\n    }\n    patternFillEllipse(cx, cy, width, height, o) {\n        const filler = getFiller(this, o);\n        return filler.fillEllipse(cx, cy, width, height, o);\n    }\n    patternFillArc(x, y, width, height, start, stop, o) {\n        const cx = x;\n        const cy = y;\n        let rx = Math.abs(width / 2);\n        let ry = Math.abs(height / 2);\n        rx += this.getOffset(-rx * 0.01, rx * 0.01, o);\n        ry += this.getOffset(-ry * 0.01, ry * 0.01, o);\n        let strt = start;\n        let stp = stop;\n        while (strt < 0) {\n            strt += Math.PI * 2;\n            stp += Math.PI * 2;\n        }\n        if ((stp - strt) > (Math.PI * 2)) {\n            strt = 0;\n            stp = Math.PI * 2;\n        }\n        const increment = (stp - strt) / o.curveStepCount;\n        const points = [];\n        for (let angle = strt; angle <= stp; angle = angle + increment) {\n            points.push([cx + rx * Math.cos(angle), cy + ry * Math.sin(angle)]);\n        }\n        points.push([cx + rx * Math.cos(stp), cy + ry * Math.sin(stp)]);\n        points.push([cx, cy]);\n        return this.patternFillPolygon(points, o);\n    }\n    /// \n    getOffset(min, max, ops) {\n        return ops.roughness * ((Math.random() * (max - min)) + min);\n    }\n    doubleLine(x1, y1, x2, y2, o) {\n        const o1 = this._line(x1, y1, x2, y2, o, true, false);\n        const o2 = this._line(x1, y1, x2, y2, o, true, true);\n        return o1.concat(o2);\n    }\n    _line(x1, y1, x2, y2, o, move, overlay) {\n        const lengthSq = Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2);\n        let offset = o.maxRandomnessOffset || 0;\n        if ((offset * offset * 100) > lengthSq) {\n            offset = Math.sqrt(lengthSq) / 10;\n        }\n        const halfOffset = offset / 2;\n        const divergePoint = 0.2 + Math.random() * 0.2;\n        let midDispX = o.bowing * o.maxRandomnessOffset * (y2 - y1) / 200;\n        let midDispY = o.bowing * o.maxRandomnessOffset * (x1 - x2) / 200;\n        midDispX = this.getOffset(-midDispX, midDispX, o);\n        midDispY = this.getOffset(-midDispY, midDispY, o);\n        const ops = [];\n        if (move) {\n            if (overlay) {\n                ops.push({\n                    op: 'move', data: [\n                        x1 + this.getOffset(-halfOffset, halfOffset, o),\n                        y1 + this.getOffset(-halfOffset, halfOffset, o)\n                    ]\n                });\n            }\n            else {\n                ops.push({\n                    op: 'move', data: [\n                        x1 + this.getOffset(-offset, offset, o),\n                        y1 + this.getOffset(-offset, offset, o)\n                    ]\n                });\n            }\n        }\n        if (overlay) {\n            ops.push({\n                op: 'bcurveTo', data: [\n                    midDispX + x1 + (x2 - x1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    midDispY + y1 + (y2 - y1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    midDispX + x1 + 2 * (x2 - x1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    midDispY + y1 + 2 * (y2 - y1) * divergePoint + this.getOffset(-halfOffset, halfOffset, o),\n                    x2 + this.getOffset(-halfOffset, halfOffset, o),\n                    y2 + this.getOffset(-halfOffset, halfOffset, o)\n                ]\n            });\n        }\n        else {\n            ops.push({\n                op: 'bcurveTo', data: [\n                    midDispX + x1 + (x2 - x1) * divergePoint + this.getOffset(-offset, offset, o),\n                    midDispY + y1 + (y2 - y1) * divergePoint + this.getOffset(-offset, offset, o),\n                    midDispX + x1 + 2 * (x2 - x1) * divergePoint + this.getOffset(-offset, offset, o),\n                    midDispY + y1 + 2 * (y2 - y1) * divergePoint + this.getOffset(-offset, offset, o),\n                    x2 + this.getOffset(-offset, offset, o),\n                    y2 + this.getOffset(-offset, offset, o)\n                ]\n            });\n        }\n        return ops;\n    }\n    _curve(points, closePoint, o) {\n        const len = points.length;\n        let ops = [];\n        if (len > 3) {\n            const b = [];\n            const s = 1 - o.curveTightness;\n            ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n            for (let i = 1; (i + 2) < len; i++) {\n                const cachedVertArray = points[i];\n                b[0] = [cachedVertArray[0], cachedVertArray[1]];\n                b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n                b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n                b[3] = [points[i + 1][0], points[i + 1][1]];\n                ops.push({ op: 'bcurveTo', data: [b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]] });\n            }\n            if (closePoint && closePoint.length === 2) {\n                const ro = o.maxRandomnessOffset;\n                ops.push({ op: 'lineTo', data: [closePoint[0] + this.getOffset(-ro, ro, o), closePoint[1] + +this.getOffset(-ro, ro, o)] });\n            }\n        }\n        else if (len === 3) {\n            ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n            ops.push({\n                op: 'bcurveTo', data: [\n                    points[1][0], points[1][1],\n                    points[2][0], points[2][1],\n                    points[2][0], points[2][1]\n                ]\n            });\n        }\n        else if (len === 2) {\n            ops = ops.concat(this.doubleLine(points[0][0], points[0][1], points[1][0], points[1][1], o));\n        }\n        return ops;\n    }\n    _ellipse(increment, cx, cy, rx, ry, offset, overlap, o) {\n        const radOffset = this.getOffset(-0.5, 0.5, o) - (Math.PI / 2);\n        const points = [];\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n            this.getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n        ]);\n        for (let angle = radOffset; angle < (Math.PI * 2 + radOffset - 0.01); angle = angle + increment) {\n            points.push([\n                this.getOffset(-offset, offset, o) + cx + rx * Math.cos(angle),\n                this.getOffset(-offset, offset, o) + cy + ry * Math.sin(angle)\n            ]);\n        }\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + rx * Math.cos(radOffset + Math.PI * 2 + overlap * 0.5),\n            this.getOffset(-offset, offset, o) + cy + ry * Math.sin(radOffset + Math.PI * 2 + overlap * 0.5)\n        ]);\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.98 * rx * Math.cos(radOffset + overlap),\n            this.getOffset(-offset, offset, o) + cy + 0.98 * ry * Math.sin(radOffset + overlap)\n        ]);\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset + overlap * 0.5),\n            this.getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset + overlap * 0.5)\n        ]);\n        return this._curve(points, null, o);\n    }\n    _curveWithOffset(points, offset, o) {\n        const ps = [];\n        ps.push([\n            points[0][0] + this.getOffset(-offset, offset, o),\n            points[0][1] + this.getOffset(-offset, offset, o),\n        ]);\n        ps.push([\n            points[0][0] + this.getOffset(-offset, offset, o),\n            points[0][1] + this.getOffset(-offset, offset, o),\n        ]);\n        for (let i = 1; i < points.length; i++) {\n            ps.push([\n                points[i][0] + this.getOffset(-offset, offset, o),\n                points[i][1] + this.getOffset(-offset, offset, o),\n            ]);\n            if (i === (points.length - 1)) {\n                ps.push([\n                    points[i][0] + this.getOffset(-offset, offset, o),\n                    points[i][1] + this.getOffset(-offset, offset, o),\n                ]);\n            }\n        }\n        return this._curve(ps, null, o);\n    }\n    _arc(increment, cx, cy, rx, ry, strt, stp, offset, o) {\n        const radOffset = strt + this.getOffset(-0.1, 0.1, o);\n        const points = [];\n        points.push([\n            this.getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n            this.getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n        ]);\n        for (let angle = radOffset; angle <= stp; angle = angle + increment) {\n            points.push([\n                this.getOffset(-offset, offset, o) + cx + rx * Math.cos(angle),\n                this.getOffset(-offset, offset, o) + cy + ry * Math.sin(angle)\n            ]);\n        }\n        points.push([\n            cx + rx * Math.cos(stp),\n            cy + ry * Math.sin(stp)\n        ]);\n        points.push([\n            cx + rx * Math.cos(stp),\n            cy + ry * Math.sin(stp)\n        ]);\n        return this._curve(points, null, o);\n    }\n    _bezierTo(x1, y1, x2, y2, x, y, path, o) {\n        const ops = [];\n        const ros = [o.maxRandomnessOffset || 1, (o.maxRandomnessOffset || 1) + 0.5];\n        let f = [0, 0];\n        for (let i = 0; i < 2; i++) {\n            if (i === 0) {\n                ops.push({ op: 'move', data: [path.x, path.y] });\n            }\n            else {\n                ops.push({ op: 'move', data: [path.x + this.getOffset(-ros[0], ros[0], o), path.y + this.getOffset(-ros[0], ros[0], o)] });\n            }\n            f = [x + this.getOffset(-ros[i], ros[i], o), y + this.getOffset(-ros[i], ros[i], o)];\n            ops.push({\n                op: 'bcurveTo', data: [\n                    x1 + this.getOffset(-ros[i], ros[i], o), y1 + this.getOffset(-ros[i], ros[i], o),\n                    x2 + this.getOffset(-ros[i], ros[i], o), y2 + this.getOffset(-ros[i], ros[i], o),\n                    f[0], f[1]\n                ]\n            });\n        }\n        path.setPosition(f[0], f[1]);\n        return ops;\n    }\n    _processSegment(path, seg, prevSeg, o) {\n        let ops = [];\n        switch (seg.key) {\n            case 'M':\n            case 'm': {\n                const delta = seg.key === 'm';\n                if (seg.data.length >= 2) {\n                    let x = +seg.data[0];\n                    let y = +seg.data[1];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    const ro = 1 * (o.maxRandomnessOffset || 0);\n                    x = x + this.getOffset(-ro, ro, o);\n                    y = y + this.getOffset(-ro, ro, o);\n                    path.setPosition(x, y);\n                    ops.push({ op: 'move', data: [x, y] });\n                }\n                break;\n            }\n            case 'L':\n            case 'l': {\n                const delta = seg.key === 'l';\n                if (seg.data.length >= 2) {\n                    let x = +seg.data[0];\n                    let y = +seg.data[1];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    ops = ops.concat(this.doubleLine(path.x, path.y, x, y, o));\n                    path.setPosition(x, y);\n                }\n                break;\n            }\n            case 'H':\n            case 'h': {\n                const delta = seg.key === 'h';\n                if (seg.data.length) {\n                    let x = +seg.data[0];\n                    if (delta) {\n                        x += path.x;\n                    }\n                    ops = ops.concat(this.doubleLine(path.x, path.y, x, path.y, o));\n                    path.setPosition(x, path.y);\n                }\n                break;\n            }\n            case 'V':\n            case 'v': {\n                const delta = seg.key === 'v';\n                if (seg.data.length) {\n                    let y = +seg.data[0];\n                    if (delta) {\n                        y += path.y;\n                    }\n                    ops = ops.concat(this.doubleLine(path.x, path.y, path.x, y, o));\n                    path.setPosition(path.x, y);\n                }\n                break;\n            }\n            case 'Z':\n            case 'z': {\n                if (path.first) {\n                    ops = ops.concat(this.doubleLine(path.x, path.y, path.first[0], path.first[1], o));\n                    path.setPosition(path.first[0], path.first[1]);\n                    path.first = null;\n                }\n                break;\n            }\n            case 'C':\n            case 'c': {\n                const delta = seg.key === 'c';\n                if (seg.data.length >= 6) {\n                    let x1 = +seg.data[0];\n                    let y1 = +seg.data[1];\n                    let x2 = +seg.data[2];\n                    let y2 = +seg.data[3];\n                    let x = +seg.data[4];\n                    let y = +seg.data[5];\n                    if (delta) {\n                        x1 += path.x;\n                        x2 += path.x;\n                        x += path.x;\n                        y1 += path.y;\n                        y2 += path.y;\n                        y += path.y;\n                    }\n                    const ob = this._bezierTo(x1, y1, x2, y2, x, y, path, o);\n                    ops = ops.concat(ob);\n                    path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n                }\n                break;\n            }\n            case 'S':\n            case 's': {\n                const delta = seg.key === 's';\n                if (seg.data.length >= 4) {\n                    let x2 = +seg.data[0];\n                    let y2 = +seg.data[1];\n                    let x = +seg.data[2];\n                    let y = +seg.data[3];\n                    if (delta) {\n                        x2 += path.x;\n                        x += path.x;\n                        y2 += path.y;\n                        y += path.y;\n                    }\n                    let x1 = x2;\n                    let y1 = y2;\n                    const prevKey = prevSeg ? prevSeg.key : '';\n                    let ref = null;\n                    if (prevKey === 'c' || prevKey === 'C' || prevKey === 's' || prevKey === 'S') {\n                        ref = path.bezierReflectionPoint;\n                    }\n                    if (ref) {\n                        x1 = ref[0];\n                        y1 = ref[1];\n                    }\n                    const ob = this._bezierTo(x1, y1, x2, y2, x, y, path, o);\n                    ops = ops.concat(ob);\n                    path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n                }\n                break;\n            }\n            case 'Q':\n            case 'q': {\n                const delta = seg.key === 'q';\n                if (seg.data.length >= 4) {\n                    let x1 = +seg.data[0];\n                    let y1 = +seg.data[1];\n                    let x = +seg.data[2];\n                    let y = +seg.data[3];\n                    if (delta) {\n                        x1 += path.x;\n                        x += path.x;\n                        y1 += path.y;\n                        y += path.y;\n                    }\n                    const offset1 = 1 * (1 + o.roughness * 0.2);\n                    const offset2 = 1.5 * (1 + o.roughness * 0.22);\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset1, offset1, o), path.y + this.getOffset(-offset1, offset1, o)] });\n                    let f = [x + this.getOffset(-offset1, offset1, o), y + this.getOffset(-offset1, offset1, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset1, offset1, o), y1 + this.getOffset(-offset1, offset1, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset2, offset2, o), path.y + this.getOffset(-offset2, offset2, o)] });\n                    f = [x + this.getOffset(-offset2, offset2, o), y + this.getOffset(-offset2, offset2, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset2, offset2, o), y1 + this.getOffset(-offset2, offset2, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    path.setPosition(f[0], f[1]);\n                    path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n                }\n                break;\n            }\n            case 'T':\n            case 't': {\n                const delta = seg.key === 't';\n                if (seg.data.length >= 2) {\n                    let x = +seg.data[0];\n                    let y = +seg.data[1];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    let x1 = x;\n                    let y1 = y;\n                    const prevKey = prevSeg ? prevSeg.key : '';\n                    let ref = null;\n                    if (prevKey === 'q' || prevKey === 'Q' || prevKey === 't' || prevKey === 'T') {\n                        ref = path.quadReflectionPoint;\n                    }\n                    if (ref) {\n                        x1 = ref[0];\n                        y1 = ref[1];\n                    }\n                    const offset1 = 1 * (1 + o.roughness * 0.2);\n                    const offset2 = 1.5 * (1 + o.roughness * 0.22);\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset1, offset1, o), path.y + this.getOffset(-offset1, offset1, o)] });\n                    let f = [x + this.getOffset(-offset1, offset1, o), y + this.getOffset(-offset1, offset1, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset1, offset1, o), y1 + this.getOffset(-offset1, offset1, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    ops.push({ op: 'move', data: [path.x + this.getOffset(-offset2, offset2, o), path.y + this.getOffset(-offset2, offset2, o)] });\n                    f = [x + this.getOffset(-offset2, offset2, o), y + this.getOffset(-offset2, offset2, o)];\n                    ops.push({\n                        op: 'qcurveTo', data: [\n                            x1 + this.getOffset(-offset2, offset2, o), y1 + this.getOffset(-offset2, offset2, o),\n                            f[0], f[1]\n                        ]\n                    });\n                    path.setPosition(f[0], f[1]);\n                    path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n                }\n                break;\n            }\n            case 'A':\n            case 'a': {\n                const delta = seg.key === 'a';\n                if (seg.data.length >= 7) {\n                    const rx = +seg.data[0];\n                    const ry = +seg.data[1];\n                    const angle = +seg.data[2];\n                    const largeArcFlag = +seg.data[3];\n                    const sweepFlag = +seg.data[4];\n                    let x = +seg.data[5];\n                    let y = +seg.data[6];\n                    if (delta) {\n                        x += path.x;\n                        y += path.y;\n                    }\n                    if (x === path.x && y === path.y) {\n                        break;\n                    }\n                    if (rx === 0 || ry === 0) {\n                        ops = ops.concat(this.doubleLine(path.x, path.y, x, y, o));\n                        path.setPosition(x, y);\n                    }\n                    else {\n                        for (let i = 0; i < 1; i++) {\n                            const arcConverter = new RoughArcConverter([path.x, path.y], [x, y], [rx, ry], angle, largeArcFlag ? true : false, sweepFlag ? true : false);\n                            let segment = arcConverter.getNextSegment();\n                            while (segment) {\n                                const ob = this._bezierTo(segment.cp1[0], segment.cp1[1], segment.cp2[0], segment.cp2[1], segment.to[0], segment.to[1], path, o);\n                                ops = ops.concat(ob);\n                                segment = arcConverter.getNextSegment();\n                            }\n                        }\n                    }\n                }\n                break;\n            }\n            default:\n                break;\n        }\n        return ops;\n    }\n}\n","import { RoughRenderer } from './renderer';\nconst hasSelf = typeof self !== 'undefined';\nconst roughScript = hasSelf && self && self.document && self.document.currentScript && self.document.currentScript.src;\nexport function createRenderer(config) {\n    if (hasSelf && roughScript && self && self.workly && config.async && (!config.noWorker)) {\n        const worklySource = config.worklyURL || 'https://cdn.jsdelivr.net/gh/pshihn/workly/dist/workly.min.js';\n        if (worklySource) {\n            const code = `importScripts('${worklySource}', '${roughScript}');\\nworkly.expose(self.rough.createRenderer());`;\n            const ourl = URL.createObjectURL(new Blob([code]));\n            return self.workly.proxy(ourl);\n        }\n    }\n    return new RoughRenderer();\n}\n","import { createRenderer } from './renderer-factory.js';\nconst hasSelf = typeof self !== 'undefined';\nexport class RoughGeneratorBase {\n    constructor(config, surface) {\n        this.defaultOptions = {\n            maxRandomnessOffset: 2,\n            roughness: 1,\n            bowing: 1,\n            stroke: '#000',\n            strokeWidth: 1,\n            curveTightness: 0,\n            curveStepCount: 9,\n            fillStyle: 'hachure',\n            fillWeight: -1,\n            hachureAngle: -41,\n            hachureGap: -1\n        };\n        this.config = config || {};\n        this.surface = surface;\n        this.renderer = createRenderer(this.config);\n        if (this.config.options) {\n            this.defaultOptions = this._options(this.config.options);\n        }\n    }\n    _options(options) {\n        return options ? Object.assign({}, this.defaultOptions, options) : this.defaultOptions;\n    }\n    _drawable(shape, sets, options) {\n        return { shape, sets: sets || [], options: options || this.defaultOptions };\n    }\n    get lib() {\n        return this.renderer;\n    }\n    getCanvasSize() {\n        const val = (w) => {\n            if (w && typeof w === 'object') {\n                if (w.baseVal && w.baseVal.value) {\n                    return w.baseVal.value;\n                }\n            }\n            return w || 100;\n        };\n        if (this.surface) {\n            return [val(this.surface.width), val(this.surface.height)];\n        }\n        return [100, 100];\n    }\n    computePolygonSize(points) {\n        if (points.length) {\n            let left = points[0][0];\n            let right = points[0][0];\n            let top = points[0][1];\n            let bottom = points[0][1];\n            for (let i = 1; i < points.length; i++) {\n                left = Math.min(left, points[i][0]);\n                right = Math.max(right, points[i][0]);\n                top = Math.min(top, points[i][1]);\n                bottom = Math.max(bottom, points[i][1]);\n            }\n            return [(right - left), (bottom - top)];\n        }\n        return [0, 0];\n    }\n    polygonPath(points) {\n        let d = '';\n        if (points.length) {\n            d = `M${points[0][0]},${points[0][1]}`;\n            for (let i = 1; i < points.length; i++) {\n                d = `${d} L${points[i][0]},${points[i][1]}`;\n            }\n        }\n        return d;\n    }\n    computePathSize(d) {\n        let size = [0, 0];\n        if (hasSelf && self.document) {\n            try {\n                const ns = 'http://www.w3.org/2000/svg';\n                const svg = self.document.createElementNS(ns, 'svg');\n                svg.setAttribute('width', '0');\n                svg.setAttribute('height', '0');\n                const pathNode = self.document.createElementNS(ns, 'path');\n                pathNode.setAttribute('d', d);\n                svg.appendChild(pathNode);\n                self.document.body.appendChild(svg);\n                const bb = pathNode.getBBox();\n                if (bb) {\n                    size[0] = bb.width || 0;\n                    size[1] = bb.height || 0;\n                }\n                self.document.body.removeChild(svg);\n            }\n            catch (err) { }\n        }\n        const canvasSize = this.getCanvasSize();\n        if (!(size[0] * size[1])) {\n            size = canvasSize;\n        }\n        return size;\n    }\n    toPaths(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.defaultOptions;\n        const paths = [];\n        for (const drawing of sets) {\n            let path = null;\n            switch (drawing.type) {\n                case 'path':\n                    path = {\n                        d: this.opsToPath(drawing),\n                        stroke: o.stroke,\n                        strokeWidth: o.strokeWidth,\n                        fill: 'none'\n                    };\n                    break;\n                case 'fillPath':\n                    path = {\n                        d: this.opsToPath(drawing),\n                        stroke: 'none',\n                        strokeWidth: 0,\n                        fill: o.fill || 'none'\n                    };\n                    break;\n                case 'fillSketch':\n                    path = this.fillSketch(drawing, o);\n                    break;\n                case 'path2Dfill':\n                    path = {\n                        d: drawing.path || '',\n                        stroke: 'none',\n                        strokeWidth: 0,\n                        fill: o.fill || 'none'\n                    };\n                    break;\n                case 'path2Dpattern': {\n                    const size = drawing.size;\n                    const pattern = {\n                        x: 0, y: 0, width: 1, height: 1,\n                        viewBox: `0 0 ${Math.round(size[0])} ${Math.round(size[1])}`,\n                        patternUnits: 'objectBoundingBox',\n                        path: this.fillSketch(drawing, o)\n                    };\n                    path = {\n                        d: drawing.path,\n                        stroke: 'none',\n                        strokeWidth: 0,\n                        pattern: pattern\n                    };\n                    break;\n                }\n            }\n            if (path) {\n                paths.push(path);\n            }\n        }\n        return paths;\n    }\n    fillSketch(drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        return {\n            d: this.opsToPath(drawing),\n            stroke: o.fill || 'none',\n            strokeWidth: fweight,\n            fill: 'none'\n        };\n    }\n    opsToPath(drawing) {\n        let path = '';\n        for (const item of drawing.ops) {\n            const data = item.data;\n            switch (item.op) {\n                case 'move':\n                    path += `M${data[0]} ${data[1]} `;\n                    break;\n                case 'bcurveTo':\n                    path += `C${data[0]} ${data[1]}, ${data[2]} ${data[3]}, ${data[4]} ${data[5]} `;\n                    break;\n                case 'qcurveTo':\n                    path += `Q${data[0]} ${data[1]}, ${data[2]} ${data[3]} `;\n                    break;\n                case 'lineTo':\n                    path += `L${data[0]} ${data[1]} `;\n                    break;\n            }\n        }\n        return path.trim();\n    }\n}\n","import { RoughGeneratorBase } from './generator-base';\nexport class RoughGenerator extends RoughGeneratorBase {\n    constructor(config, surface) {\n        super(config, surface);\n    }\n    line(x1, y1, x2, y2, options) {\n        const o = this._options(options);\n        return this._drawable('line', [this.lib.line(x1, y1, x2, y2, o)], o);\n    }\n    rectangle(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            const points = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n            if (o.fillStyle === 'solid') {\n                paths.push(this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                paths.push(this.lib.patternFillPolygon(points, o));\n            }\n        }\n        paths.push(this.lib.rectangle(x, y, width, height, o));\n        return this._drawable('rectangle', paths, o);\n    }\n    ellipse(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = this.lib.ellipse(x, y, width, height, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(this.lib.patternFillEllipse(x, y, width, height, o));\n            }\n        }\n        paths.push(this.lib.ellipse(x, y, width, height, o));\n        return this._drawable('ellipse', paths, o);\n    }\n    circle(x, y, diameter, options) {\n        const ret = this.ellipse(x, y, diameter, diameter, options);\n        ret.shape = 'circle';\n        return ret;\n    }\n    linearPath(points, options) {\n        const o = this._options(options);\n        return this._drawable('linearPath', [this.lib.linearPath(points, false, o)], o);\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (closed && o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = this.lib.arc(x, y, width, height, start, stop, true, false, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(this.lib.patternFillArc(x, y, width, height, start, stop, o));\n            }\n        }\n        paths.push(this.lib.arc(x, y, width, height, start, stop, closed, true, o));\n        return this._drawable('arc', paths, o);\n    }\n    curve(points, options) {\n        const o = this._options(options);\n        return this._drawable('curve', [this.lib.curve(points, o)], o);\n    }\n    polygon(points, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                paths.push(this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                const size = this.computePolygonSize(points);\n                const fillPoints = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = this.lib.patternFillPolygon(fillPoints, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = this.polygonPath(points);\n                paths.push(shape);\n            }\n        }\n        paths.push(this.lib.linearPath(points, true, o));\n        return this._drawable('polygon', paths, o);\n    }\n    path(d, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (!d) {\n            return this._drawable('path', paths, o);\n        }\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = { type: 'path2Dfill', path: d, ops: [] };\n                paths.push(shape);\n            }\n            else {\n                const size = this.computePathSize(d);\n                const points = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = this.lib.patternFillPolygon(points, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = d;\n                paths.push(shape);\n            }\n        }\n        paths.push(this.lib.svgPath(d, o));\n        return this._drawable('path', paths, o);\n    }\n}\n","import { RoughRenderer } from './renderer';\nconst hasDocument = typeof document !== 'undefined';\nexport class RoughCanvasBase {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.ctx = this.canvas.getContext('2d');\n    }\n    static createRenderer() {\n        return new RoughRenderer();\n    }\n    draw(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.getDefaultOptions();\n        const ctx = this.ctx;\n        for (const drawing of sets) {\n            switch (drawing.type) {\n                case 'path':\n                    ctx.save();\n                    ctx.strokeStyle = o.stroke;\n                    ctx.lineWidth = o.strokeWidth;\n                    this._drawToContext(ctx, drawing);\n                    ctx.restore();\n                    break;\n                case 'fillPath':\n                    ctx.save();\n                    ctx.fillStyle = o.fill || '';\n                    this._drawToContext(ctx, drawing);\n                    ctx.restore();\n                    break;\n                case 'fillSketch':\n                    this.fillSketch(ctx, drawing, o);\n                    break;\n                case 'path2Dfill': {\n                    this.ctx.save();\n                    this.ctx.fillStyle = o.fill || '';\n                    const p2d = new Path2D(drawing.path);\n                    this.ctx.fill(p2d);\n                    this.ctx.restore();\n                    break;\n                }\n                case 'path2Dpattern': {\n                    const doc = this.canvas.ownerDocument || (hasDocument && document);\n                    if (doc) {\n                        const size = drawing.size;\n                        const hcanvas = doc.createElement('canvas');\n                        const hcontext = hcanvas.getContext('2d');\n                        const bbox = this.computeBBox(drawing.path);\n                        if (bbox && (bbox.width || bbox.height)) {\n                            hcanvas.width = this.canvas.width;\n                            hcanvas.height = this.canvas.height;\n                            hcontext.translate(bbox.x || 0, bbox.y || 0);\n                        }\n                        else {\n                            hcanvas.width = size[0];\n                            hcanvas.height = size[1];\n                        }\n                        this.fillSketch(hcontext, drawing, o);\n                        this.ctx.save();\n                        this.ctx.fillStyle = this.ctx.createPattern(hcanvas, 'repeat');\n                        const p2d = new Path2D(drawing.path);\n                        this.ctx.fill(p2d);\n                        this.ctx.restore();\n                    }\n                    else {\n                        console.error('Cannot render path2Dpattern. No defs/document defined.');\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    computeBBox(d) {\n        if (hasDocument) {\n            try {\n                const ns = 'http://www.w3.org/2000/svg';\n                const svg = document.createElementNS(ns, 'svg');\n                svg.setAttribute('width', '0');\n                svg.setAttribute('height', '0');\n                const pathNode = self.document.createElementNS(ns, 'path');\n                pathNode.setAttribute('d', d);\n                svg.appendChild(pathNode);\n                document.body.appendChild(svg);\n                const bbox = pathNode.getBBox();\n                document.body.removeChild(svg);\n                return bbox;\n            }\n            catch (err) { }\n        }\n        return null;\n    }\n    fillSketch(ctx, drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        ctx.save();\n        ctx.strokeStyle = o.fill || '';\n        ctx.lineWidth = fweight;\n        this._drawToContext(ctx, drawing);\n        ctx.restore();\n    }\n    _drawToContext(ctx, drawing) {\n        ctx.beginPath();\n        for (const item of drawing.ops) {\n            const data = item.data;\n            switch (item.op) {\n                case 'move':\n                    ctx.moveTo(data[0], data[1]);\n                    break;\n                case 'bcurveTo':\n                    ctx.bezierCurveTo(data[0], data[1], data[2], data[3], data[4], data[5]);\n                    break;\n                case 'qcurveTo':\n                    ctx.quadraticCurveTo(data[0], data[1], data[2], data[3]);\n                    break;\n                case 'lineTo':\n                    ctx.lineTo(data[0], data[1]);\n                    break;\n            }\n        }\n        if (drawing.type === 'fillPath') {\n            ctx.fill();\n        }\n        else {\n            ctx.stroke();\n        }\n    }\n}\n","import { RoughGenerator } from './generator';\nimport { RoughCanvasBase } from './canvas-base';\nexport class RoughCanvas extends RoughCanvasBase {\n    constructor(canvas, config) {\n        super(canvas);\n        this.gen = new RoughGenerator(config || null, this.canvas);\n    }\n    get generator() {\n        return this.gen;\n    }\n    getDefaultOptions() {\n        return this.gen.defaultOptions;\n    }\n    line(x1, y1, x2, y2, options) {\n        const d = this.gen.line(x1, y1, x2, y2, options);\n        this.draw(d);\n        return d;\n    }\n    rectangle(x, y, width, height, options) {\n        const d = this.gen.rectangle(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    ellipse(x, y, width, height, options) {\n        const d = this.gen.ellipse(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    circle(x, y, diameter, options) {\n        const d = this.gen.circle(x, y, diameter, options);\n        this.draw(d);\n        return d;\n    }\n    linearPath(points, options) {\n        const d = this.gen.linearPath(points, options);\n        this.draw(d);\n        return d;\n    }\n    polygon(points, options) {\n        const d = this.gen.polygon(points, options);\n        this.draw(d);\n        return d;\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n        this.draw(d);\n        return d;\n    }\n    curve(points, options) {\n        const d = this.gen.curve(points, options);\n        this.draw(d);\n        return d;\n    }\n    path(d, options) {\n        const drawing = this.gen.path(d, options);\n        this.draw(drawing);\n        return drawing;\n    }\n}\n","import { RoughGeneratorBase } from './generator-base';\nexport class RoughGeneratorAsync extends RoughGeneratorBase {\n    async line(x1, y1, x2, y2, options) {\n        const o = this._options(options);\n        return this._drawable('line', [await this.lib.line(x1, y1, x2, y2, o)], o);\n    }\n    async rectangle(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            const points = [[x, y], [x + width, y], [x + width, y + height], [x, y + height]];\n            if (o.fillStyle === 'solid') {\n                paths.push(await this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                paths.push(await this.lib.patternFillPolygon(points, o));\n            }\n        }\n        paths.push(await this.lib.rectangle(x, y, width, height, o));\n        return this._drawable('rectangle', paths, o);\n    }\n    async ellipse(x, y, width, height, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = await this.lib.ellipse(x, y, width, height, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(await this.lib.patternFillEllipse(x, y, width, height, o));\n            }\n        }\n        paths.push(await this.lib.ellipse(x, y, width, height, o));\n        return this._drawable('ellipse', paths, o);\n    }\n    async circle(x, y, diameter, options) {\n        const ret = await this.ellipse(x, y, diameter, diameter, options);\n        ret.shape = 'circle';\n        return ret;\n    }\n    async linearPath(points, options) {\n        const o = this._options(options);\n        return this._drawable('linearPath', [await this.lib.linearPath(points, false, o)], o);\n    }\n    async arc(x, y, width, height, start, stop, closed = false, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (closed && o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = await this.lib.arc(x, y, width, height, start, stop, true, false, o);\n                shape.type = 'fillPath';\n                paths.push(shape);\n            }\n            else {\n                paths.push(await this.lib.patternFillArc(x, y, width, height, start, stop, o));\n            }\n        }\n        paths.push(await this.lib.arc(x, y, width, height, start, stop, closed, true, o));\n        return this._drawable('arc', paths, o);\n    }\n    async curve(points, options) {\n        const o = this._options(options);\n        return this._drawable('curve', [await this.lib.curve(points, o)], o);\n    }\n    async polygon(points, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                paths.push(await this.lib.solidFillPolygon(points, o));\n            }\n            else {\n                const size = this.computePolygonSize(points);\n                const fillPoints = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = await this.lib.patternFillPolygon(fillPoints, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = this.polygonPath(points);\n                paths.push(shape);\n            }\n        }\n        paths.push(await this.lib.linearPath(points, true, o));\n        return this._drawable('polygon', paths, o);\n    }\n    async path(d, options) {\n        const o = this._options(options);\n        const paths = [];\n        if (!d) {\n            return this._drawable('path', paths, o);\n        }\n        if (o.fill) {\n            if (o.fillStyle === 'solid') {\n                const shape = { type: 'path2Dfill', path: d, ops: [] };\n                paths.push(shape);\n            }\n            else {\n                const size = this.computePathSize(d);\n                const points = [\n                    [0, 0],\n                    [size[0], 0],\n                    [size[0], size[1]],\n                    [0, size[1]]\n                ];\n                const shape = await this.lib.patternFillPolygon(points, o);\n                shape.type = 'path2Dpattern';\n                shape.size = size;\n                shape.path = d;\n                paths.push(shape);\n            }\n        }\n        paths.push(await this.lib.svgPath(d, o));\n        return this._drawable('path', paths, o);\n    }\n}\n","import { RoughGeneratorAsync } from './generator-async';\nimport { RoughCanvasBase } from './canvas-base';\nexport class RoughCanvasAsync extends RoughCanvasBase {\n    constructor(canvas, config) {\n        super(canvas);\n        this.genAsync = new RoughGeneratorAsync(config || null, this.canvas);\n    }\n    get generator() {\n        return this.genAsync;\n    }\n    getDefaultOptions() {\n        return this.genAsync.defaultOptions;\n    }\n    async line(x1, y1, x2, y2, options) {\n        const d = await this.genAsync.line(x1, y1, x2, y2, options);\n        this.draw(d);\n        return d;\n    }\n    async rectangle(x, y, width, height, options) {\n        const d = await this.genAsync.rectangle(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    async ellipse(x, y, width, height, options) {\n        const d = await this.genAsync.ellipse(x, y, width, height, options);\n        this.draw(d);\n        return d;\n    }\n    async circle(x, y, diameter, options) {\n        const d = await this.genAsync.circle(x, y, diameter, options);\n        this.draw(d);\n        return d;\n    }\n    async linearPath(points, options) {\n        const d = await this.genAsync.linearPath(points, options);\n        this.draw(d);\n        return d;\n    }\n    async polygon(points, options) {\n        const d = await this.genAsync.polygon(points, options);\n        this.draw(d);\n        return d;\n    }\n    async arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = await this.genAsync.arc(x, y, width, height, start, stop, closed, options);\n        this.draw(d);\n        return d;\n    }\n    async curve(points, options) {\n        const d = await this.genAsync.curve(points, options);\n        this.draw(d);\n        return d;\n    }\n    async path(d, options) {\n        const drawing = await this.genAsync.path(d, options);\n        this.draw(drawing);\n        return drawing;\n    }\n}\n","import { RoughRenderer } from './renderer';\nconst hasDocument = typeof document !== 'undefined';\nexport class RoughSVGBase {\n    constructor(svg) {\n        this.svg = svg;\n    }\n    static createRenderer() {\n        return new RoughRenderer();\n    }\n    get defs() {\n        const doc = this.svg.ownerDocument || (hasDocument && document);\n        if (doc) {\n            if (!this._defs) {\n                const dnode = doc.createElementNS('http://www.w3.org/2000/svg', 'defs');\n                if (this.svg.firstChild) {\n                    this.svg.insertBefore(dnode, this.svg.firstChild);\n                }\n                else {\n                    this.svg.appendChild(dnode);\n                }\n                this._defs = dnode;\n            }\n        }\n        return this._defs || null;\n    }\n    draw(drawable) {\n        const sets = drawable.sets || [];\n        const o = drawable.options || this.getDefaultOptions();\n        const doc = this.svg.ownerDocument || (hasDocument && document);\n        const g = doc.createElementNS('http://www.w3.org/2000/svg', 'g');\n        for (const drawing of sets) {\n            let path = null;\n            switch (drawing.type) {\n                case 'path': {\n                    path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                    path.setAttribute('d', this.opsToPath(drawing));\n                    path.style.stroke = o.stroke;\n                    path.style.strokeWidth = o.strokeWidth + '';\n                    path.style.fill = 'none';\n                    break;\n                }\n                case 'fillPath': {\n                    path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                    path.setAttribute('d', this.opsToPath(drawing));\n                    path.style.stroke = 'none';\n                    path.style.strokeWidth = '0';\n                    path.style.fill = o.fill || null;\n                    break;\n                }\n                case 'fillSketch': {\n                    path = this.fillSketch(doc, drawing, o);\n                    break;\n                }\n                case 'path2Dfill': {\n                    path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                    path.setAttribute('d', drawing.path || '');\n                    path.style.stroke = 'none';\n                    path.style.strokeWidth = '0';\n                    path.style.fill = o.fill || null;\n                    break;\n                }\n                case 'path2Dpattern': {\n                    if (!this.defs) {\n                        console.error('Cannot render path2Dpattern. No defs/document defined.');\n                    }\n                    else {\n                        const size = drawing.size;\n                        const pattern = doc.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n                        const id = `rough-${Math.floor(Math.random() * (Number.MAX_SAFE_INTEGER || 999999))}`;\n                        pattern.setAttribute('id', id);\n                        pattern.setAttribute('x', '0');\n                        pattern.setAttribute('y', '0');\n                        pattern.setAttribute('width', '1');\n                        pattern.setAttribute('height', '1');\n                        pattern.setAttribute('height', '1');\n                        pattern.setAttribute('viewBox', `0 0 ${Math.round(size[0])} ${Math.round(size[1])}`);\n                        pattern.setAttribute('patternUnits', 'objectBoundingBox');\n                        const patternPath = this.fillSketch(doc, drawing, o);\n                        pattern.appendChild(patternPath);\n                        this.defs.appendChild(pattern);\n                        path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        path.setAttribute('d', drawing.path || '');\n                        path.style.stroke = 'none';\n                        path.style.strokeWidth = '0';\n                        path.style.fill = `url(#${id})`;\n                    }\n                    break;\n                }\n            }\n            if (path) {\n                g.appendChild(path);\n            }\n        }\n        return g;\n    }\n    fillSketch(doc, drawing, o) {\n        let fweight = o.fillWeight;\n        if (fweight < 0) {\n            fweight = o.strokeWidth / 2;\n        }\n        const path = doc.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', this.opsToPath(drawing));\n        path.style.stroke = o.fill || null;\n        path.style.strokeWidth = fweight + '';\n        path.style.fill = 'none';\n        return path;\n    }\n}\n","import { RoughGenerator } from './generator';\nimport { RoughSVGBase } from './svg-base';\nexport class RoughSVG extends RoughSVGBase {\n    constructor(svg, config) {\n        super(svg);\n        this.gen = new RoughGenerator(config || null, this.svg);\n    }\n    get generator() {\n        return this.gen;\n    }\n    getDefaultOptions() {\n        return this.gen.defaultOptions;\n    }\n    opsToPath(drawing) {\n        return this.gen.opsToPath(drawing);\n    }\n    line(x1, y1, x2, y2, options) {\n        const d = this.gen.line(x1, y1, x2, y2, options);\n        return this.draw(d);\n    }\n    rectangle(x, y, width, height, options) {\n        const d = this.gen.rectangle(x, y, width, height, options);\n        return this.draw(d);\n    }\n    ellipse(x, y, width, height, options) {\n        const d = this.gen.ellipse(x, y, width, height, options);\n        return this.draw(d);\n    }\n    circle(x, y, diameter, options) {\n        const d = this.gen.circle(x, y, diameter, options);\n        return this.draw(d);\n    }\n    linearPath(points, options) {\n        const d = this.gen.linearPath(points, options);\n        return this.draw(d);\n    }\n    polygon(points, options) {\n        const d = this.gen.polygon(points, options);\n        return this.draw(d);\n    }\n    arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n        return this.draw(d);\n    }\n    curve(points, options) {\n        const d = this.gen.curve(points, options);\n        return this.draw(d);\n    }\n    path(d, options) {\n        const drawing = this.gen.path(d, options);\n        return this.draw(drawing);\n    }\n}\n","import { RoughGeneratorAsync } from './generator-async';\nimport { RoughSVGBase } from './svg-base';\nexport class RoughSVGAsync extends RoughSVGBase {\n    constructor(svg, config) {\n        super(svg);\n        this.genAsync = new RoughGeneratorAsync(config || null, this.svg);\n    }\n    get generator() {\n        return this.genAsync;\n    }\n    getDefaultOptions() {\n        return this.genAsync.defaultOptions;\n    }\n    opsToPath(drawing) {\n        return this.genAsync.opsToPath(drawing);\n    }\n    async line(x1, y1, x2, y2, options) {\n        const d = await this.genAsync.line(x1, y1, x2, y2, options);\n        return this.draw(d);\n    }\n    async rectangle(x, y, width, height, options) {\n        const d = await this.genAsync.rectangle(x, y, width, height, options);\n        return this.draw(d);\n    }\n    async ellipse(x, y, width, height, options) {\n        const d = await this.genAsync.ellipse(x, y, width, height, options);\n        return this.draw(d);\n    }\n    async circle(x, y, diameter, options) {\n        const d = await this.genAsync.circle(x, y, diameter, options);\n        return this.draw(d);\n    }\n    async linearPath(points, options) {\n        const d = await this.genAsync.linearPath(points, options);\n        return this.draw(d);\n    }\n    async polygon(points, options) {\n        const d = await this.genAsync.polygon(points, options);\n        return this.draw(d);\n    }\n    async arc(x, y, width, height, start, stop, closed = false, options) {\n        const d = await this.genAsync.arc(x, y, width, height, start, stop, closed, options);\n        return this.draw(d);\n    }\n    async curve(points, options) {\n        const d = await this.genAsync.curve(points, options);\n        return this.draw(d);\n    }\n    async path(d, options) {\n        const drawing = await this.genAsync.path(d, options);\n        return this.draw(drawing);\n    }\n}\n","import { RoughCanvas } from './canvas';\nimport { RoughGenerator } from './generator';\nimport { RoughGeneratorAsync } from './generator-async';\nimport { RoughCanvasAsync } from './canvas-async';\nimport { RoughSVG } from './svg';\nimport { RoughSVGAsync } from './svg-async';\nexport default {\n    canvas(canvas, config) {\n        if (config && config.async) {\n            return new RoughCanvasAsync(canvas, config);\n        }\n        return new RoughCanvas(canvas, config);\n    },\n    svg(svg, config) {\n        if (config && config.async) {\n            return new RoughSVGAsync(svg, config);\n        }\n        return new RoughSVG(svg, config);\n    },\n    createRenderer() {\n        return RoughCanvas.createRenderer();\n    },\n    generator(config, surface) {\n        if (config && config.async) {\n            return new RoughGeneratorAsync(config, surface);\n        }\n        return new RoughGenerator(config, surface);\n    }\n};\n","/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nwindow.JSCompiler_renameProperty = function(prop) { return prop; };\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n * @private\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\n/* eslint-disable valid-jsdoc */\n/**\n * Wraps an ES6 class expression mixin such that the mixin is only applied\n * if it has not already been applied its base argument. Also memoizes mixin\n * applications.\n *\n * @template T\n * @param {T} mixin ES6 class expression mixin to wrap\n * @return {T}\n * @suppress {invalidCasts}\n */\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n    }\n    // copy inherited mixin set from the extended class, or the base class\n    // NOTE: we avoid use of Set here because some browser (IE11)\n    // cannot extend a base Set via the constructor.\n    let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n    mixinSet[mixinDedupeId] = true;\n    /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n/* eslint-enable valid-jsdoc */\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nimport './boot.js';\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) { return window.setTimeout(fn, delay); },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\nexport {timeOut};\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\nexport {animationFrame};\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\nexport {idlePeriod};\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    microtaskNode.textContent = microtaskNodeContent++;\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\nexport {microTask};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { microTask } from '../utils/async.js';\n\n/** @const {!AsyncInterface} */\nconst microtask = microTask;\n\n/**\n * Element class mixin that provides basic meta-programming for creating one\n * or more property accessors (getter/setter pair) that enqueue an async\n * (batched) `_propertiesChanged` callback.\n *\n * For basic usage of this mixin, call `MyClass.createProperties(props)`\n * once at class definition time to create property accessors for properties\n * named in props, implement `_propertiesChanged` to react as desired to\n * property changes, and implement `static get observedAttributes()` and\n * include lowercase versions of any property names that should be set from\n * attributes. Last, call `this._enableProperties()` in the element's\n * `connectedCallback` to enable the accessors.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin for reacting to property changes from\n *   generated property accessors.\n */\nexport const PropertiesChanged = dedupingMixin(\n    /**\n     * @template T\n     * @param {function(new:T)} superClass Class to apply mixin to.\n     * @return {function(new:T)} superClass with mixin applied.\n     */\n    (superClass) => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertiesChanged}\n   * @unrestricted\n   */\n  class PropertiesChanged extends superClass {\n\n    /**\n     * Creates property accessors for the given property names.\n     * @param {!Object} props Object whose keys are names of accessors.\n     * @return {void}\n     * @protected\n     */\n    static createProperties(props) {\n      const proto = this.prototype;\n      for (let prop in props) {\n        // don't stomp an existing accessor\n        if (!(prop in proto)) {\n          proto._createPropertyAccessor(prop);\n        }\n      }\n    }\n\n    /**\n     * Returns an attribute name that corresponds to the given property.\n     * The attribute name is the lowercased property name. Override to\n     * customize this mapping.\n     * @param {string} property Property to convert\n     * @return {string} Attribute name corresponding to the given property.\n     *\n     * @protected\n     */\n    static attributeNameForProperty(property) {\n      return property.toLowerCase();\n    }\n\n    /**\n     * Override point to provide a type to which to deserialize a value to\n     * a given property.\n     * @param {string} name Name of property\n     *\n     * @protected\n     */\n    static typeForProperty(name) { } //eslint-disable-line no-unused-vars\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _createPropertyAccessor(property, readOnly) {\n      this._addPropertyToAttributeMap(property);\n      if (!this.hasOwnProperty('__dataHasAccessor')) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        this._definePropertyAccessor(property, readOnly);\n      }\n    }\n\n    /**\n     * Adds the given `property` to a map matching attribute names\n     * to property names, using `attributeNameForProperty`. This map is\n     * used when deserializing attribute values to properties.\n     *\n     * @param {string} property Name of the property\n     * @override\n     */\n    _addPropertyToAttributeMap(property) {\n      if (!this.hasOwnProperty('__dataAttributes')) {\n        this.__dataAttributes = Object.assign({}, this.__dataAttributes);\n      }\n      if (!this.__dataAttributes[property]) {\n        const attr = this.constructor.attributeNameForProperty(property);\n        this.__dataAttributes[attr] = property;\n      }\n    }\n\n    /**\n     * Defines a property accessor for the given property.\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created\n     * @return {void}\n     * @override\n     */\n     _definePropertyAccessor(property, readOnly) {\n      Object.defineProperty(this, property, {\n        /* eslint-disable valid-jsdoc */\n        /** @this {PropertiesChanged} */\n        get() {\n          return this._getProperty(property);\n        },\n        /** @this {PropertiesChanged} */\n        set: readOnly ? function () {} : function (value) {\n          this._setProperty(property, value);\n        }\n        /* eslint-enable */\n      });\n    }\n\n    constructor() {\n      super();\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      this.__dataInstanceProps = null;\n      this.__serializing = false;\n      this._initializeProperties();\n    }\n\n    /**\n     * Lifecycle callback called when properties are enabled via\n     * `_enableProperties`.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its property data initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @return {void}\n     * @public\n     * @override\n     */\n    ready() {\n      this.__dataReady = true;\n      this._flushProperties();\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeProperties() {\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Returns the value for the given property.\n     * @param {string} property Name of property\n     * @return {*} Value for the given property\n     * @protected\n     * @override\n     */\n    _getProperty(property) {\n      return this.__data[property];\n    }\n\n    /* eslint-disable no-unused-vars */\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} ext Not used here; affordance for closure\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     * @override\n     */\n    _setPendingProperty(property, value, ext) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n    /* eslint-enable */\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _flushProperties() {\n      const props = this.__data;\n      const changedProps = this.__dataPending;\n      const old = this.__dataOld;\n      if (this._shouldPropertiesChange(props, changedProps, old)) {\n        this.__dataPending = null;\n        this.__dataOld = null;\n        this._propertiesChanged(props, changedProps, old);\n      }\n    }\n\n    /**\n     * Called in `_flushProperties` to determine if `_propertiesChanged`\n     * should be called. The default implementation returns true if\n     * properties are pending. Override to customize when\n     * `_propertiesChanged` is called.\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {boolean} true if changedProps is truthy\n     * @override\n     */\n    _shouldPropertiesChange(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n      return Boolean(changedProps);\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {?Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {?Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @return {void}\n     * @protected\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` if a strict equality\n     * check fails. The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     * @override\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n          // This ensures (old==NaN, value==NaN) always returns false\n          (old === old || value === value))\n      );\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     * @param {?string} namespace Attribute namespace.\n     * @return {void}\n     * @suppress {missingProperties} Super may or may not implement the callback\n     * @override\n     */\n    attributeChangedCallback(name, old, value, namespace) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n      if (super.attributeChangedCallback) {\n        super.attributeChangedCallback(name, old, value, namespace);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to, defaults to the value\n     * returned from `typeForProperty`\n     * @return {void}\n     * @override\n     */\n    _attributeToProperty(attribute, value, type) {\n      if (!this.__serializing) {\n        const map = this.__dataAttributes;\n        const property = map && map[attribute] || attribute;\n        this[property] = this._deserializeValue(value, type ||\n          this.constructor.typeForProperty(property));\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @suppress {invalidCasts} Closure can't figure out `this` is an element.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect to.\n     * @param {*=} value Property value to refect.\n     * @return {void}\n     * @override\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(/** @type {!HTMLElement} */(this), value,\n        attribute || this.constructor.attributeNameForProperty(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     * @return {void}\n     * @override\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      const str = this._serializeValue(value);\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(attribute, str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called when setting JS property values to\n     * HTML attributes.  Users may override this method to provide\n     * serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided\n     * property  value.\n     * @override\n     */\n    _serializeValue(value) {\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called when reading HTML attribute values to\n     * JS properties.  Users may override this method to provide\n     * deserialization for custom `type`s. Types for `Boolean`, `String`,\n     * and `Number` convert attributes to the expected types.\n     *\n     * @param {?string} value Value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     * @override\n     */\n    _deserializeValue(value, type) {\n      switch (type) {\n        case Boolean:\n          return (value !== null);\n        case Number:\n          return Number(value);\n        default:\n          return value;\n      }\n    }\n\n  }\n\n  return PropertiesChanged;\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '../utils/boot.js';\n\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { PropertiesChanged } from './properties-changed.js';\n\n/**\n * Creates a copy of `props` with each property normalized such that\n * upgraded it is an object with at least a type property { type: Type}.\n *\n * @param {Object} props Properties to normalize\n * @return {Object} Copy of input `props` with normalized properties that\n * are in the form {type: Type}\n * @private\n */\nfunction normalizeProperties(props) {\n  const output = {};\n  for (let p in props) {\n    const o = props[p];\n    output[p] = (typeof o === 'function') ? {type: o} : o;\n  }\n  return output;\n}\n\n/**\n * Mixin that provides a minimal starting point to using the PropertiesChanged\n * mixin by providing a mechanism to declare properties in a static\n * getter (e.g. static get properties() { return { foo: String } }). Changes\n * are reported via the `_propertiesChanged` method.\n *\n * This mixin provides no specific support for rendering. Users are expected\n * to create a ShadowRoot and put content into it and update it in whatever\n * way makes sense. This can be done in reaction to properties changing by\n * implementing `_propertiesChanged`.\n *\n * @mixinFunction\n * @polymer\n * @appliesMixin PropertiesChanged\n * @summary Mixin that provides a minimal starting point for using\n * the PropertiesChanged mixin by providing a declarative `properties` object.\n */\nexport const PropertiesMixin = dedupingMixin(superClass => {\n\n /**\n  * @constructor\n  * @implements {Polymer_PropertiesChanged}\n  * @private\n  */\n const base = PropertiesChanged(superClass);\n\n /**\n  * Returns the super class constructor for the given class, if it is an\n  * instance of the PropertiesMixin.\n  *\n  * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {?PropertiesMixinConstructor} Super class constructor\n  */\n function superPropertiesClass(constructor) {\n   const superCtor = Object.getPrototypeOf(constructor);\n\n   // Note, the `PropertiesMixin` class below only refers to the class\n   // generated by this call to the mixin; the instanceof test only works\n   // because the mixin is deduped and guaranteed only to apply once, hence\n   // all constructors in a proto chain will see the same `PropertiesMixin`\n   return (superCtor.prototype instanceof PropertiesMixin) ?\n     /** @type {!PropertiesMixinConstructor} */ (superCtor) : null;\n }\n\n /**\n  * Returns a memoized version of the `properties` object for the\n  * given class. Properties not in object format are converted to at\n  * least {type}.\n  *\n  * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor\n  * @return {Object} Memoized properties object\n  */\n function ownProperties(constructor) {\n   if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {\n     let props = null;\n\n     if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor)) && constructor.properties) {\n       props = normalizeProperties(constructor.properties);\n     }\n\n     constructor.__ownProperties = props;\n   }\n   return constructor.__ownProperties;\n }\n\n /**\n  * @polymer\n  * @mixinClass\n  * @extends {base}\n  * @implements {Polymer_PropertiesMixin}\n  * @unrestricted\n  */\n class PropertiesMixin extends base {\n\n   /**\n    * Implements standard custom elements getter to observes the attributes\n    * listed in `properties`.\n    * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n    */\n   static get observedAttributes() {\n     const props = this._properties;\n     return props ? Object.keys(props).map(p => this.attributeNameForProperty(p)) : [];\n   }\n\n   /**\n    * Finalizes an element definition, including ensuring any super classes\n    * are also finalized. This includes ensuring property\n    * accessors exist on the element prototype. This method calls\n    * `_finalizeClass` to finalize each constructor in the prototype chain.\n    * @return {void}\n    */\n   static finalize() {\n     if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       if (superCtor) {\n         superCtor.finalize();\n       }\n       this.__finalized = true;\n       this._finalizeClass();\n     }\n   }\n\n   /**\n    * Finalize an element class. This includes ensuring property\n    * accessors exist on the element prototype. This method is called by\n    * `finalize` and finalizes the class constructor.\n    *\n    * @protected\n    */\n   static _finalizeClass() {\n     const props = ownProperties(/** @type {!PropertiesMixinConstructor} */(this));\n     if (props) {\n       this.createProperties(props);\n     }\n   }\n\n   /**\n    * Returns a memoized version of all properties, including those inherited\n    * from super classes. Properties not in object format are converted to\n    * at least {type}.\n    *\n    * @return {Object} Object containing properties for this class\n    * @protected\n    */\n   static get _properties() {\n     if (!this.hasOwnProperty(\n       JSCompiler_renameProperty('__properties', this))) {\n       const superCtor = superPropertiesClass(/** @type {!PropertiesMixinConstructor} */(this));\n       this.__properties = Object.assign({},\n         superCtor && superCtor._properties,\n         ownProperties(/** @type {PropertiesMixinConstructor} */(this)));\n     }\n     return this.__properties;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method to return type specified in the\n    * static `properties` object for the given property.\n    * @param {string} name Name of property\n    * @return {*} Type to which to deserialize attribute\n    *\n    * @protected\n    */\n   static typeForProperty(name) {\n     const info = this._properties[name];\n     return info && info.type;\n   }\n\n   /**\n    * Overrides `PropertiesChanged` method and adds a call to\n    * `finalize` which lazily configures the element's property accessors.\n    * @override\n    * @return {void}\n    */\n   _initializeProperties() {\n     this.constructor.finalize();\n     super._initializeProperties();\n   }\n\n   /**\n    * Called when the element is added to a document.\n    * Calls `_enableProperties` to turn on property system from\n    * `PropertiesChanged`.\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   connectedCallback() {\n     if (super.connectedCallback) {\n       super.connectedCallback();\n     }\n     this._enableProperties();\n   }\n\n   /**\n    * Called when the element is removed from a document\n    * @suppress {missingProperties} Super may or may not implement the callback\n    * @return {void}\n    * @override\n    */\n   disconnectedCallback() {\n     if (super.disconnectedCallback) {\n       super.disconnectedCallback();\n     }\n   }\n\n }\n\n return PropertiesMixin;\n\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\n/**\n * @fileoverview Module with utilities for converting between \"dash-case\" and\n * \"camelCase\" identifiers.\n */\n\n/**\n * Converts \"dash-case\" identifier (e.g. `foo-bar-baz`) to \"camelCase\"\n * (e.g. `fooBarBaz`).\n *\n * @param {string} dash Dash-case identifier\n * @return {string} Camel-case representation of the identifier\n */\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\n/**\n * Converts \"camelCase\" identifier (e.g. `fooBarBaz`) to \"dash-case\"\n * (e.g. `foo-bar-baz`).\n *\n * @param {string} camel Camel-case identifier\n * @return {string} Dash-case representation of the identifier\n */\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// The first argument to JS template tags retain identity across multiple\n// calls to a tag for the same literal, so we can cache work done per literal\n// in a Map.\nexport const templateCaches = new Map();\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html');\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg');\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, partCallback = defaultPartCallback) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.partCallback = partCallback;\n    }\n    /**\n     * Returns a string of HTML used to create a <template> element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isTextBinding = true;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            html += s;\n            // We're in a text position if the previous string closed its tags.\n            // If it doesn't have any tags, then we use the previous text position\n            // state.\n            const closing = findTagClose(s);\n            isTextBinding = closing > -1 ? closing < s.length : isTextBinding;\n            html += isTextBinding ? nodeMarker : marker;\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an <svg> tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the <svg> tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function defaultTemplateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = new Map();\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n        template = new Template(result, result.getTemplateElement());\n        templateCache.set(result.strings, template);\n    }\n    return template;\n}\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param templateFactory a function to create a Template or retreive one from\n *     cache.\n */\nexport function render(result, container, templateFactory = defaultTemplateFactory) {\n    const template = templateFactory(result);\n    let instance = container.__templateInstance;\n    // Repeat render, just call update()\n    if (instance !== undefined && instance.template === template &&\n        instance._partCallback === result.partCallback) {\n        instance.update(result.values);\n        return;\n    }\n    // First render, create a new TemplateInstance and append it\n    instance =\n        new TemplateInstance(template, result.partCallback, templateFactory);\n    container.__templateInstance = instance;\n    const fragment = instance._clone();\n    instance.update(result.values);\n    removeNodes(container, container.firstChild);\n    container.appendChild(fragment);\n}\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nconst marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, not attribute positions,\n * in template.\n */\nconst nodeMarker = `<!--${marker}-->`;\nconst markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst lastAttributeNameRegex = /[ \\x09\\x0a\\x0c\\x0d]([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)[ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*)$/;\n/**\n * Finds the closing index of the last closed HTML tag.\n * This has 3 possible return values:\n *   - `-1`, meaning there is no tag in str.\n *   - `string.length`, meaning the last opened tag is unclosed.\n *   - Some positive number < str.length, meaning the index of the closing '>'.\n */\nfunction findTagClose(str) {\n    const close = str.lastIndexOf('>');\n    const open = str.indexOf('<', close + 1);\n    return open > -1 ? str.length : close;\n}\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport class TemplatePart {\n    constructor(type, index, name, rawName, strings) {\n        this.type = type;\n        this.index = index;\n        this.name = name;\n        this.rawName = rawName;\n        this.strings = strings;\n    }\n}\nexport const isTemplatePartActive = (part) => part.index !== -1;\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const content = this.element.content;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n               NodeFilter.SHOW_TEXT */, null, false);\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        // The actual previous node, accounting for removals: if a node is removed\n        // it will never be the previousNode.\n        let previousNode;\n        // Used to set previousNode at the top of the loop.\n        let currentNode;\n        while (walker.nextNode()) {\n            index++;\n            previousNode = currentNode;\n            const node = currentNode = walker.currentNode;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (!node.hasAttributes()) {\n                    continue;\n                }\n                const attributes = node.attributes;\n                // Per https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                // attributes are not guaranteed to be returned in document order. In\n                // particular, Edge/IE can return them out of order, so we cannot assume\n                // a correspondance between part index and attribute index.\n                let count = 0;\n                for (let i = 0; i < attributes.length; i++) {\n                    if (attributes[i].value.indexOf(marker) >= 0) {\n                        count++;\n                    }\n                }\n                while (count-- > 0) {\n                    // Get the template literal section leading up to the first\n                    // expression in this attribute\n                    const stringForPart = result.strings[partIndex];\n                    // Find the attribute name\n                    const attributeNameInPart = lastAttributeNameRegex.exec(stringForPart)[1];\n                    // Find the corresponding attribute\n                    // TODO(justinfagnani): remove non-null assertion\n                    const attribute = attributes.getNamedItem(attributeNameInPart);\n                    const stringsForAttributeValue = attribute.value.split(markerRegex);\n                    this.parts.push(new TemplatePart('attribute', index, attribute.name, attributeNameInPart, stringsForAttributeValue));\n                    node.removeAttribute(attribute.name);\n                    partIndex += stringsForAttributeValue.length - 1;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const nodeValue = node.nodeValue;\n                if (nodeValue.indexOf(marker) < 0) {\n                    continue;\n                }\n                const parent = node.parentNode;\n                const strings = nodeValue.split(markerRegex);\n                const lastIndex = strings.length - 1;\n                // We have a part for each match found\n                partIndex += lastIndex;\n                // Generate a new text node for each literal section\n                // These nodes are also used as the markers for node parts\n                for (let i = 0; i < lastIndex; i++) {\n                    parent.insertBefore((strings[i] === '')\n                        ? document.createComment('')\n                        : document.createTextNode(strings[i]), node);\n                    this.parts.push(new TemplatePart('node', index++));\n                }\n                parent.insertBefore(strings[lastIndex] === '' ?\n                    document.createComment('') :\n                    document.createTextNode(strings[lastIndex]), node);\n                nodesToRemove.push(node);\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */ &&\n                node.nodeValue === marker) {\n                const parent = node.parentNode;\n                // Add a new marker node to be the startNode of the Part if any of the\n                // following are true:\n                //  * We don't have a previousSibling\n                //  * previousSibling is being removed (thus it's not the\n                //    `previousNode`)\n                //  * previousSibling is not a Text node\n                //\n                // TODO(justinfagnani): We should be able to use the previousNode here\n                // as the marker node and reduce the number of extra nodes we add to a\n                // template. See https://github.com/PolymerLabs/lit-html/issues/147\n                const previousSibling = node.previousSibling;\n                if (previousSibling === null || previousSibling !== previousNode ||\n                    previousSibling.nodeType !== Node.TEXT_NODE) {\n                    parent.insertBefore(document.createComment(''), node);\n                }\n                else {\n                    index--;\n                }\n                this.parts.push(new TemplatePart('node', index++));\n                nodesToRemove.push(node);\n                // If we don't have a nextSibling add a marker node.\n                // We don't have to check if the next node is going to be removed,\n                // because that node will induce a new marker if so.\n                if (node.nextSibling === null) {\n                    parent.insertBefore(document.createComment(''), node);\n                }\n                else {\n                    index--;\n                }\n                currentNode = previousNode;\n                partIndex++;\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\n/**\n * Returns a value ready to be inserted into a Part from a user-provided value.\n *\n * If the user value is a directive, this invokes the directive with the given\n * part. If the value is null, it's converted to undefined to work better\n * with certain DOM APIs, like textContent.\n */\nexport const getValue = (part, value) => {\n    // `null` as the value of a Text node will render the string 'null'\n    // so we convert it to undefined\n    if (isDirective(value)) {\n        value = value(part);\n        return noChange;\n    }\n    return value === null ? undefined : value;\n};\nexport const directive = (f) => {\n    f.__litDirective = true;\n    return f;\n};\nconst isDirective = (o) => typeof o === 'function' && o.__litDirective === true;\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * @deprecated Use `noChange` instead.\n */\nexport { noChange as directiveValue };\nconst isPrimitiveValue = (value) => value === null ||\n    !(typeof value === 'object' || typeof value === 'function');\nexport class AttributePart {\n    constructor(instance, element, name, strings) {\n        this.instance = instance;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.size = strings.length - 1;\n        this._previousValues = [];\n    }\n    _interpolate(values, startIndex) {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const v = getValue(this, values[startIndex + i]);\n            if (v && v !== noChange &&\n                (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n                for (const t of v) {\n                    // TODO: we need to recursively call getValue into iterables...\n                    text += t;\n                }\n            }\n            else {\n                text += v;\n            }\n        }\n        return text + strings[l];\n    }\n    _equalToPreviousValues(values, startIndex) {\n        for (let i = startIndex; i < startIndex + this.size; i++) {\n            if (this._previousValues[i] !== values[i] ||\n                !isPrimitiveValue(values[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    setValue(values, startIndex) {\n        if (this._equalToPreviousValues(values, startIndex)) {\n            return;\n        }\n        const s = this.strings;\n        let value;\n        if (s.length === 2 && s[0] === '' && s[1] === '') {\n            // An expression that occupies the whole attribute value will leave\n            // leading and trailing empty strings.\n            value = getValue(this, values[startIndex]);\n            if (Array.isArray(value)) {\n                value = value.join('');\n            }\n        }\n        else {\n            value = this._interpolate(values, startIndex);\n        }\n        if (value !== noChange) {\n            this.element.setAttribute(this.name, value);\n        }\n        this._previousValues = values;\n    }\n}\nexport class NodePart {\n    constructor(instance, startNode, endNode) {\n        this.instance = instance;\n        this.startNode = startNode;\n        this.endNode = endNode;\n        this._previousValue = undefined;\n    }\n    setValue(value) {\n        value = getValue(this, value);\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitiveValue(value)) {\n            // Handle primitive values\n            // If the value didn't change, do nothing\n            if (value === this._previousValue) {\n                return;\n            }\n            this._setText(value);\n        }\n        else if (value instanceof TemplateResult) {\n            this._setTemplateResult(value);\n        }\n        else if (Array.isArray(value) || value[Symbol.iterator]) {\n            this._setIterable(value);\n        }\n        else if (value instanceof Node) {\n            this._setNode(value);\n        }\n        else if (value.then !== undefined) {\n            this._setPromise(value);\n        }\n        else {\n            // Fallback, will render the string representation\n            this._setText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _setNode(value) {\n        if (this._previousValue === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this._previousValue = value;\n    }\n    _setText(value) {\n        const node = this.startNode.nextSibling;\n        value = value === undefined ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === Node.TEXT_NODE) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if _previousValue is\n            // primitive?\n            node.textContent = value;\n        }\n        else {\n            this._setNode(document.createTextNode(value));\n        }\n        this._previousValue = value;\n    }\n    _setTemplateResult(value) {\n        const template = this.instance._getTemplate(value);\n        let instance;\n        if (this._previousValue && this._previousValue.template === template) {\n            instance = this._previousValue;\n        }\n        else {\n            instance = new TemplateInstance(template, this.instance._partCallback, this.instance._getTemplate);\n            this._setNode(instance._clone());\n            this._previousValue = instance;\n        }\n        instance.update(value.values);\n    }\n    _setIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _previousValue is an array, then the previous render was of an\n        // iterable and _previousValue will contain the NodeParts from the previous\n        // render. If _previousValue is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this._previousValue)) {\n            this.clear();\n            this._previousValue = [];\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this._previousValue;\n        let partIndex = 0;\n        for (const item of value) {\n            // Try to reuse an existing part\n            let itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                // If we're creating the first item part, it's startNode should be the\n                // container's startNode\n                let itemStart = this.startNode;\n                // If we're not creating the first part, create a new separator marker\n                // node, and fix up the previous part's endNode to point to it\n                if (partIndex > 0) {\n                    const previousPart = itemParts[partIndex - 1];\n                    itemStart = previousPart.endNode = document.createTextNode('');\n                    this._insert(itemStart);\n                }\n                itemPart = new NodePart(this.instance, itemStart, this.endNode);\n                itemParts.push(itemPart);\n            }\n            itemPart.setValue(item);\n            partIndex++;\n        }\n        if (partIndex === 0) {\n            this.clear();\n            this._previousValue = undefined;\n        }\n        else if (partIndex < itemParts.length) {\n            const lastPart = itemParts[partIndex - 1];\n            // Truncate the parts array so _previousValue reflects the current state\n            itemParts.length = partIndex;\n            this.clear(lastPart.endNode.previousSibling);\n            lastPart.endNode = this.endNode;\n        }\n    }\n    _setPromise(value) {\n        this._previousValue = value;\n        value.then((v) => {\n            if (this._previousValue === value) {\n                this.setValue(v);\n            }\n        });\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\nexport const defaultPartCallback = (instance, templatePart, node) => {\n    if (templatePart.type === 'attribute') {\n        return new AttributePart(instance, node, templatePart.name, templatePart.strings);\n    }\n    else if (templatePart.type === 'node') {\n        return new NodePart(instance, node, node.nextSibling);\n    }\n    throw new Error(`Unknown part type ${templatePart.type}`);\n};\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, partCallback, getTemplate) {\n        this._parts = [];\n        this.template = template;\n        this._partCallback = partCallback;\n        this._getTemplate = getTemplate;\n    }\n    update(values) {\n        let valueIndex = 0;\n        for (const part of this._parts) {\n            if (!part) {\n                valueIndex++;\n            }\n            else if (part.size === undefined) {\n                part.setValue(values[valueIndex]);\n                valueIndex++;\n            }\n            else {\n                part.setValue(values, valueIndex);\n                valueIndex += part.size;\n            }\n        }\n    }\n    _clone() {\n        // Clone the node, rather than importing it, to keep the fragment in the\n        // template's document. This leaves the fragment inert so custom elements\n        // won't upgrade until after the main document adopts the node.\n        const fragment = this.template.element.content.cloneNode(true);\n        const parts = this.template.parts;\n        if (parts.length > 0) {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n                   NodeFilter.SHOW_TEXT */, null, false);\n            let index = -1;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const partActive = isTemplatePartActive(part);\n                // An inactive part has no coresponding Template node.\n                if (partActive) {\n                    while (index < part.index) {\n                        index++;\n                        walker.nextNode();\n                    }\n                }\n                this._parts.push(partActive ? this._partCallback(this, part, walker.currentNode) : undefined);\n            }\n        }\n        return fragment;\n    }\n}\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    let node = start;\n    while (node !== end) {\n        const n = node.nextSibling;\n        container.insertBefore(node, before);\n        node = n;\n    }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes = (container, startNode, endNode = null) => {\n    let node = startNode;\n    while (node !== endNode) {\n        const n = node.nextSibling;\n        container.removeChild(node);\n        node = n;\n    }\n};\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from '../lit-html.js';\nconst walkerNodeFilter = NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n    NodeFilter.SHOW_TEXT;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1, removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = 0;\n    let part = parts[0];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            part = parts[++partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            refNode.parentNode.insertBefore(node, refNode);\n            insertCount = countNodes(node);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes, Template, templateCaches, TemplateInstance } from '../lit-html.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = new Map();\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (typeof window.ShadyCSS === 'object') {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.set(result.strings, template);\n    }\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nfunction removeStylesFromLitTemplates(scopeName) {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.forEach((template) => {\n                const { element: { content } } = template;\n                const styles = content.querySelectorAll('style');\n                removeNodesFromTemplate(template, new Set(Array.from(styles)));\n            });\n        }\n    });\n}\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered output.\n */\nconst ensureStylesScoped = (fragment, template, scopeName) => {\n    // only scope element template once per scope name\n    if (!shadyRenderSet.has(scopeName)) {\n        shadyRenderSet.add(scopeName);\n        const styleTemplate = document.createElement('template');\n        Array.from(fragment.querySelectorAll('style')).forEach((s) => {\n            styleTemplate.content.appendChild(s);\n        });\n        window.ShadyCSS.prepareTemplateStyles(styleTemplate, scopeName);\n        // Fix templates: note the expectation here is that the given `fragment`\n        // has been generated from the given `template` which contains\n        // the set of templates rendered into this scope.\n        // It is only from this set of initial templates from which styles\n        // will be scoped and removed.\n        removeStylesFromLitTemplates(scopeName);\n        // ApplyShim case\n        if (window.ShadyCSS.nativeShadow) {\n            const style = styleTemplate.content.querySelector('style');\n            if (style !== null) {\n                // Insert style into rendered fragment\n                fragment.insertBefore(style, fragment.firstChild);\n                // Insert into lit-template (for subsequent renders)\n                insertNodeIntoTemplate(template, style.cloneNode(true), template.element.content.firstChild);\n            }\n        }\n    }\n};\n// NOTE: We're copying code from lit-html's `render` method here.\n// We're doing this explicitly because the API for rendering templates is likely\n// to change in the near term.\nexport function render(result, container, scopeName) {\n    const templateFactory = shadyTemplateFactory(scopeName);\n    const template = templateFactory(result);\n    let instance = container.__templateInstance;\n    // Repeat render, just call update()\n    if (instance !== undefined && instance.template === template &&\n        instance._partCallback === result.partCallback) {\n        instance.update(result.values);\n        return;\n    }\n    // First render, create a new TemplateInstance and append it\n    instance =\n        new TemplateInstance(template, result.partCallback, templateFactory);\n    container.__templateInstance = instance;\n    const fragment = instance._clone();\n    instance.update(result.values);\n    const host = container instanceof ShadowRoot ?\n        container.host :\n        undefined;\n    // If there's a shadow host, do ShadyCSS scoping...\n    if (host !== undefined && typeof window.ShadyCSS === 'object') {\n        ensureStylesScoped(fragment, template, scopeName);\n        window.ShadyCSS.styleElement(host);\n    }\n    removeNodes(container, container.firstChild);\n    container.appendChild(fragment);\n}\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, defaultPartCallback, noChange, getValue, SVGTemplateResult, TemplateResult } from '../lit-html.js';\nexport { render } from '../lit-html.js';\n/**\n * Interprets a template literal as a lit-extended HTML template.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', extendedPartCallback);\n/**\n * Interprets a template literal as a lit-extended SVG template.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', extendedPartCallback);\n/**\n * A PartCallback which allows templates to set properties and declarative\n * event handlers.\n *\n * Properties are set by default, instead of attributes. Attribute names in\n * lit-html templates preserve case, so properties are case sensitive. If an\n * expression takes up an entire attribute value, then the property is set to\n * that value. If an expression is interpolated with a string or other\n * expressions then the property is set to the string result of the\n * interpolation.\n *\n * To set an attribute instead of a property, append a `$` suffix to the\n * attribute name.\n *\n * Example:\n *\n *     html`<button class$=\"primary\">Buy Now</button>`\n *\n * To set an event handler, prefix the attribute name with `on-`:\n *\n * Example:\n *\n *     html`<button on-click=${(e)=> this.onClickHandler(e)}>Buy Now</button>`\n *\n */\nexport const extendedPartCallback = (instance, templatePart, node) => {\n    if (templatePart.type === 'attribute') {\n        if (templatePart.rawName.substr(0, 3) === 'on-') {\n            const eventName = templatePart.rawName.slice(3);\n            return new EventPart(instance, node, eventName);\n        }\n        const lastChar = templatePart.name.substr(templatePart.name.length - 1);\n        if (lastChar === '$') {\n            const name = templatePart.name.slice(0, -1);\n            return new AttributePart(instance, node, name, templatePart.strings);\n        }\n        if (lastChar === '?') {\n            const name = templatePart.name.slice(0, -1);\n            return new BooleanAttributePart(instance, node, name, templatePart.strings);\n        }\n        return new PropertyPart(instance, node, templatePart.rawName, templatePart.strings);\n    }\n    return defaultPartCallback(instance, templatePart, node);\n};\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart extends AttributePart {\n    setValue(values, startIndex) {\n        const s = this.strings;\n        if (s.length === 2 && s[0] === '' && s[1] === '') {\n            const value = getValue(this, values[startIndex]);\n            if (value === noChange) {\n                return;\n            }\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n        }\n        else {\n            throw new Error('boolean attributes can only contain a single expression');\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n    setValue(values, startIndex) {\n        const s = this.strings;\n        let value;\n        if (this._equalToPreviousValues(values, startIndex)) {\n            return;\n        }\n        if (s.length === 2 && s[0] === '' && s[1] === '') {\n            // An expression that occupies the whole attribute value will leave\n            // leading and trailing empty strings.\n            value = getValue(this, values[startIndex]);\n        }\n        else {\n            // Interpolation, so interpolate\n            value = this._interpolate(values, startIndex);\n        }\n        if (value !== noChange) {\n            this.element[this.name] = value;\n        }\n        this._previousValues = values;\n    }\n}\nexport class EventPart {\n    constructor(instance, element, eventName) {\n        this.instance = instance;\n        this.element = element;\n        this.eventName = eventName;\n    }\n    setValue(value) {\n        const listener = getValue(this, value);\n        if (listener === this._listener) {\n            return;\n        }\n        if (listener == null) {\n            this.element.removeEventListener(this.eventName, this);\n        }\n        else if (this._listener == null) {\n            this.element.addEventListener(this.eventName, this);\n        }\n        this._listener = listener;\n    }\n    handleEvent(event) {\n        if (typeof this._listener === 'function') {\n            this._listener.call(this.element, event);\n        }\n        else if (typeof this._listener.handleEvent === 'function') {\n            this._listener.handleEvent(event);\n        }\n    }\n}\n//# sourceMappingURL=lit-extended.js.map","import { PropertiesMixin } from '@polymer/polymer/lib/mixins/properties-mixin.js';\nimport { camelToDashCase } from '@polymer/polymer/lib/utils/case-map.js';\nimport { render } from 'lit-html/lib/shady-render.js';\nexport { html, svg } from 'lit-html/lib/lit-extended.js';\n/**\n * Renders attributes to the given element based on the `attrInfo` object where\n * boolean values are added/removed as attributes.\n * @param element Element on which to set attributes.\n * @param attrInfo Object describing attributes.\n */\nexport function renderAttributes(element, attrInfo) {\n    for (const a in attrInfo) {\n        const v = attrInfo[a] === true ? '' : attrInfo[a];\n        if (v || v === '' || v === 0) {\n            if (element.getAttribute(a) !== v) {\n                element.setAttribute(a, String(v));\n            }\n        }\n        else if (element.hasAttribute(a)) {\n            element.removeAttribute(a);\n        }\n    }\n}\n/**\n * Returns a string of css class names formed by taking the properties\n * in the `classInfo` object and appending the property name to the string of\n * class names if the property value is truthy.\n * @param classInfo\n */\nexport function classString(classInfo) {\n    const o = [];\n    for (const name in classInfo) {\n        const v = classInfo[name];\n        if (v) {\n            o.push(name);\n        }\n    }\n    return o.join(' ');\n}\n/**\n * Returns a css style string formed by taking the properties in the `styleInfo`\n * object and appending the property name (dash-cased) colon the\n * property value. Properties are separated by a semi-colon.\n * @param styleInfo\n */\nexport function styleString(styleInfo) {\n    const o = [];\n    for (const name in styleInfo) {\n        const v = styleInfo[name];\n        if (v || v === 0) {\n            o.push(`${camelToDashCase(name)}: ${v}`);\n        }\n    }\n    return o.join('; ');\n}\nexport class LitElement extends PropertiesMixin(HTMLElement) {\n    constructor() {\n        super(...arguments);\n        this.__renderComplete = null;\n        this.__resolveRenderComplete = null;\n        this.__isInvalid = false;\n        this.__isChanging = false;\n    }\n    /**\n     * Override which sets up element rendering by calling* `_createRoot`\n     * and `_firstRendered`.\n     */\n    ready() {\n        this._root = this._createRoot();\n        super.ready();\n        this._firstRendered();\n    }\n    connectedCallback() {\n        if (window.ShadyCSS && this._root) {\n            window.ShadyCSS.styleElement(this);\n        }\n        super.connectedCallback();\n    }\n    /**\n     * Called after the element DOM is rendered for the first time.\n     * Implement to perform tasks after first rendering like capturing a\n     * reference to a static node which must be directly manipulated.\n     * This should not be commonly needed. For tasks which should be performed\n     * before first render, use the element constructor.\n     */\n    _firstRendered() { }\n    /**\n     * Implement to customize where the element's template is rendered by\n     * returning an element into which to render. By default this creates\n     * a shadowRoot for the element. To render into the element's childNodes,\n     * return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    _createRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Override which returns the value of `_shouldRender` which users\n     * should implement to control rendering. If this method returns false,\n     * _propertiesChanged will not be called and no rendering will occur even\n     * if property values change or `requestRender` is called.\n     * @param _props Current element properties\n     * @param _changedProps Changing element properties\n     * @param _prevProps Previous element properties\n     * @returns {boolean} Default implementation always returns true.\n     */\n    _shouldPropertiesChange(_props, _changedProps, _prevProps) {\n        const shouldRender = this._shouldRender(_props, _changedProps, _prevProps);\n        if (!shouldRender && this.__resolveRenderComplete) {\n            this.__resolveRenderComplete(false);\n        }\n        return shouldRender;\n    }\n    /**\n     * Implement to control if rendering should occur when property values\n     * change or `requestRender` is called. By default, this method always\n     * returns true, but this can be customized as an optimization to avoid\n     * rendering work when changes occur which should not be rendered.\n     * @param _props Current element properties\n     * @param _changedProps Changing element properties\n     * @param _prevProps Previous element properties\n     * @returns {boolean} Default implementation always returns true.\n     */\n    _shouldRender(_props, _changedProps, _prevProps) {\n        return true;\n    }\n    /**\n     * Override which performs element rendering by calling\n     * `_render`, `_applyRender`, and finally `_didRender`.\n     * @param props Current element properties\n     * @param changedProps Changing element properties\n     * @param prevProps Previous element properties\n     */\n    _propertiesChanged(props, changedProps, prevProps) {\n        super._propertiesChanged(props, changedProps, prevProps);\n        const result = this._render(props);\n        if (result && this._root !== undefined) {\n            this._applyRender(result, this._root);\n        }\n        this._didRender(props, changedProps, prevProps);\n        if (this.__resolveRenderComplete) {\n            this.__resolveRenderComplete(true);\n        }\n    }\n    _flushProperties() {\n        this.__isChanging = true;\n        this.__isInvalid = false;\n        super._flushProperties();\n        this.__isChanging = false;\n    }\n    /**\n     * Override which warns when a user attempts to change a property during\n     * the rendering lifecycle. This is an anti-pattern and should be avoided.\n     * @param property {string}\n     * @param value {any}\n     * @param old {any}\n     */\n    // tslint:disable-next-line no-any\n    _shouldPropertyChange(property, value, old) {\n        const change = super._shouldPropertyChange(property, value, old);\n        if (change && this.__isChanging) {\n            console.trace(`Setting properties in response to other properties changing ` +\n                `considered harmful. Setting '${property}' from ` +\n                `'${this._getProperty(property)}' to '${value}'.`);\n        }\n        return change;\n    }\n    /**\n     * Implement to describe the DOM which should be rendered in the element.\n     * Ideally, the implementation is a pure function using only props to describe\n     * the element template. The implementation must return a `lit-html`\n     * TemplateResult. By default this template is rendered into the element's\n     * shadowRoot. This can be customized by implementing `_createRoot`. This\n     * method must be implemented.\n     * @param {*} _props Current element properties\n     * @returns {TemplateResult} Must return a lit-html TemplateResult.\n     */\n    _render(_props) {\n        throw new Error('_render() not implemented');\n    }\n    /**\n     * Renders the given lit-html template `result` into the given `node`.\n     * Implement to customize the way rendering is applied. This is should not\n     * typically be needed and is provided for advanced use cases.\n     * @param result {TemplateResult} `lit-html` template result to render\n     * @param node {Element|DocumentFragment} node into which to render\n     */\n    _applyRender(result, node) {\n        render(result, node, this.localName);\n    }\n    /**\n     * Called after element DOM has been rendered. Implement to\n     * directly control rendered DOM. Typically this is not needed as `lit-html`\n     * can be used in the `_render` method to set properties, attributes, and\n     * event listeners. However, it is sometimes useful for calling methods on\n     * rendered elements, like calling `focus()` on an element to focus it.\n     * @param _props Current element properties\n     * @param _changedProps Changing element properties\n     * @param _prevProps Previous element properties\n     */\n    _didRender(_props, _changedProps, _prevProps) { }\n    /**\n     * Call to request the element to asynchronously re-render regardless\n     * of whether or not any property changes are pending.\n     */\n    requestRender() { this._invalidateProperties(); }\n    /**\n     * Override which provides tracking of invalidated state.\n     */\n    _invalidateProperties() {\n        this.__isInvalid = true;\n        super._invalidateProperties();\n    }\n    /**\n     * Returns a promise which resolves after the element next renders.\n     * The promise resolves to `true` if the element rendered and `false` if the\n     * element did not render.\n     * This is useful when users (e.g. tests) need to react to the rendered state\n     * of the element after a change is made.\n     * This can also be useful in event handlers if it is desireable to wait\n     * to send an event until after rendering. If possible implement the\n     * `_didRender` method to directly respond to rendering within the\n     * rendering lifecycle.\n     */\n    get renderComplete() {\n        if (!this.__renderComplete) {\n            this.__renderComplete = new Promise((resolve) => {\n                this.__resolveRenderComplete = (value) => {\n                    this.__resolveRenderComplete = this.__renderComplete = null;\n                    resolve(value);\n                };\n            });\n            if (!this.__isInvalid && this.__resolveRenderComplete) {\n                Promise.resolve().then(() => this.__resolveRenderComplete(false));\n            }\n        }\n        return this.__renderComplete;\n    }\n}\n//# sourceMappingURL=lit-element.js.map","const __maxRandomnessOffset = 2;\nconst __roughness = 1;\nconst __bowing = 0.85;\nconst __curveTightness = 0;\nconst __curveStepCount = 9;\n\nclass Wires {\n  _svgNode(tagName, attributes) {\n    const n = document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n    if (attributes) {\n      for (const p in attributes) {\n        if (attributes.hasOwnProperty(p)) {\n          n.setAttributeNS(null, p, attributes[p]);\n        }\n      }\n    }\n    return n;\n  }\n\n  line(svg, x1, y1, x2, y2) {\n    const path = this._line(x1, y1, x2, y2);\n    const node = this._svgNode(\"path\", { d: path.value });\n    svg.appendChild(node);\n    return node;\n  }\n\n  rectangle(svg, x, y, width, height) {\n    x = x + 2;\n    y = y + 2;\n    width = width - 4;\n    height = height - 4;\n    let path = this._line(x, y, x + width, y);\n    path = this._line(x + width, y, x + width, y + height, path);\n    path = this._line(x + width, y + height, x, y + height, path);\n    path = this._line(x, y + height, x, y, path);\n    const node = this._svgNode(\"path\", { d: path.value })\n    svg.appendChild(node);\n    return node;\n  }\n\n  polygon(svg, vertices) {\n    let path = null;\n    const vCount = vertices.length;\n    if (vCount > 2) {\n      for (let i = 0; i < 2; i++) {\n        let move = true;\n        for (let i = 1; i < vCount; i++) {\n          path = this._continuousLine(vertices[i - 1][0], vertices[i - 1][1], vertices[i][0], vertices[i][1], move, i > 0, path);\n          move = false;\n        }\n        path = this._continuousLine(vertices[vCount - 1][0], vertices[vCount - 1][1], vertices[0][0], vertices[0][1], move, i > 0, path);\n      }\n    } else if (vCount == 2) {\n      path = this._line(vertices[0][0], vertices[0][1], vertices[1][0], vertices[1][1]);\n    } else {\n      path = new WiresPath();\n    }\n\n    const node = this._svgNode(\"path\", { d: path.value })\n    svg.appendChild(node);\n    return node;\n  }\n\n  ellipse(svg, x, y, width, height) {\n    width = Math.max(width > 10 ? width - 4 : width - 1, 1);\n    height = Math.max(height > 10 ? height - 4 : height - 1, 1);\n    const ellipseInc = (Math.PI * 2) / __curveStepCount;\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += this._getOffset(-rx * 0.05, rx * 0.05);\n    ry += this._getOffset(-ry * 0.05, ry * 0.05);\n    let path = this._ellipse(ellipseInc, x, y, rx, ry, 1, ellipseInc * this._getOffset(0.1, this._getOffset(0.4, 1)));\n    path = this._ellipse(ellipseInc, x, y, rx, ry, 1.5, 0, path);\n    const node = this._svgNode(\"path\", { d: path.value })\n    svg.appendChild(node);\n    return node;\n  }\n\n  _ellipse(ellipseInc, cx, cy, rx, ry, offset, overlap, existingPath) {\n    const radOffset = this._getOffset(-0.5, 0.5) - Math.PI / 2;\n    const points = [];\n    points.push([\n      this._getOffset(-offset, offset) + cx + 0.9 * rx * Math.cos(radOffset - ellipseInc),\n      this._getOffset(-offset, offset) + cy + 0.9 * ry * Math.sin(radOffset - ellipseInc)\n    ]);\n    for (let angle = radOffset; angle < (Math.PI * 2 + radOffset - 0.01); angle = angle + ellipseInc) {\n      points.push([\n        this._getOffset(-offset, offset) + cx + rx * Math.cos(angle),\n        this._getOffset(-offset, offset) + cy + ry * Math.sin(angle)\n      ]);\n    }\n    points.push([\n      this._getOffset(-offset, offset) + cx + rx * Math.cos(radOffset + Math.PI * 2 + overlap * 0.5),\n      this._getOffset(-offset, offset) + cy + ry * Math.sin(radOffset + Math.PI * 2 + overlap * 0.5)\n    ]);\n    points.push([\n      this._getOffset(-offset, offset) + cx + 0.98 * rx * Math.cos(radOffset + overlap),\n      this._getOffset(-offset, offset) + cy + 0.98 * ry * Math.sin(radOffset + overlap)\n    ]);\n    points.push([\n      this._getOffset(-offset, offset) + cx + 0.9 * rx * Math.cos(radOffset + overlap * 0.5),\n      this._getOffset(-offset, offset) + cy + 0.9 * ry * Math.sin(radOffset + overlap * 0.5)\n    ]);\n    return this._curve(points, existingPath);\n  }\n\n  _getOffset(min, max) {\n    return __roughness * ((Math.random() * (max - min)) + min);\n  }\n\n  _line(x1, y1, x2, y2, existingPath) {\n    const lengthSq = Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2);\n    let offset = __maxRandomnessOffset || 0;\n    if ((offset * offset * 100) > lengthSq) {\n      offset = Math.sqrt(lengthSq) / 10;\n    }\n    const halfOffset = offset / 2;\n    const divergePoint = 0.2 + Math.random() * 0.2;\n    let midDispX = __bowing * __maxRandomnessOffset * (y2 - y1) / 200;\n    let midDispY = __bowing * __maxRandomnessOffset * (x1 - x2) / 200;\n    midDispX = this._getOffset(-midDispX, midDispX);\n    midDispY = this._getOffset(-midDispY, midDispY);\n\n    let path = existingPath || new WiresPath();\n    path.moveTo(x1 + this._getOffset(-offset, offset), y1 + this._getOffset(-offset, offset));\n    path.bcurveTo(midDispX + x1 + (x2 - x1) * divergePoint + this._getOffset(-offset, offset),\n      midDispY + y1 + (y2 - y1) * divergePoint + this._getOffset(-offset, offset),\n      midDispX + x1 + 2 * (x2 - x1) * divergePoint + this._getOffset(-offset, offset),\n      midDispY + y1 + 2 * (y2 - y1) * divergePoint + this._getOffset(-offset, offset),\n      x2 + this._getOffset(-offset, offset),\n      y2 + this._getOffset(-offset, offset)\n    );\n    path.moveTo(x1 + this._getOffset(-halfOffset, halfOffset), y1 + this._getOffset(-halfOffset, halfOffset));\n    path.bcurveTo(midDispX + x1 + (x2 - x1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n      midDispY + y1 + (y2 - y1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n      midDispX + x1 + 2 * (x2 - x1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n      midDispY + y1 + 2 * (y2 - y1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n      x2 + this._getOffset(-halfOffset, halfOffset),\n      y2 + this._getOffset(-halfOffset, halfOffset)\n    );\n    return path;\n  }\n\n  _continuousLine(x1, y1, x2, y2, move, overwrite, path) {\n    path = path || new WiresPath();\n    const lengthSq = Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2);\n    let offset = __maxRandomnessOffset || 0;\n    if ((offset * offset * 100) > lengthSq) {\n      offset = Math.sqrt(lengthSq) / 10;\n    }\n    const halfOffset = offset / 2;\n    const divergePoint = 0.2 + Math.random() * 0.2;\n    let midDispX = __bowing * __maxRandomnessOffset * (y2 - y1) / 200;\n    let midDispY = __bowing * __maxRandomnessOffset * (x1, x2) / 200;\n    midDispX = this._getOffset(-midDispX, midDispX);\n    midDispY = this._getOffset(-midDispY, midDispY);\n    if (move) {\n      path.moveTo(x1 + this._getOffset(-offset, offset), y1 + this._getOffset(-offset, offset));\n    }\n    if (!overwrite) {\n      path.bcurveTo(midDispX + x1 + (x2 - x1) * divergePoint + this._getOffset(-offset, offset),\n        midDispY + y1 + (y2 - y1) * divergePoint + this._getOffset(-offset, offset),\n        midDispX + x1 + 2 * (x2 - x1) * divergePoint + this._getOffset(-offset, offset),\n        midDispY + y1 + 2 * (y2 - y1) * divergePoint + this._getOffset(-offset, offset),\n        x2 + this._getOffset(-offset, offset),\n        y2 + this._getOffset(-offset, offset)\n      );\n    } else {\n      path.bcurveTo(midDispX + x1 + (x2 - x1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n        midDispY + y1 + (y2 - y1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n        midDispX + x1 + 2 * (x2 - x1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n        midDispY + y1 + 2 * (y2 - y1) * divergePoint + this._getOffset(-halfOffset, halfOffset),\n        x2 + this._getOffset(-halfOffset, halfOffset),\n        y2 + this._getOffset(-halfOffset, halfOffset)\n      );\n    }\n    return path;\n  }\n\n  _curve(vertArray, existingPath) {\n    const vertArrayLength = vertArray.length;\n    let path = existingPath || new WiresPath();\n    if (vertArrayLength > 3) {\n      const b = [];\n      const s = 1 - __curveTightness;\n      path.moveTo(vertArray[1][0], vertArray[1][1]);\n      for (let i = 1; (i + 2) < vertArrayLength; i++) {\n        const cachedVertArray = vertArray[i];\n        b[0] = [cachedVertArray[0], cachedVertArray[1]];\n        b[1] = [cachedVertArray[0] + (s * vertArray[i + 1][0] - s * vertArray[i - 1][0]) / 6, cachedVertArray[1] + (s * vertArray[i + 1][1] - s * vertArray[i - 1][1]) / 6];\n        b[2] = [vertArray[i + 1][0] + (s * vertArray[i][0] - s * vertArray[i + 2][0]) / 6, vertArray[i + 1][1] + (s * vertArray[i][1] - s * vertArray[i + 2][1]) / 6];\n        b[3] = [vertArray[i + 1][0], vertArray[i + 1][1]];\n        path.bcurveTo(b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]);\n      }\n    } else if (vertArrayLength === 3) {\n      path.moveTo(vertArray[0][0], vertArray[0][1]);\n      path.bcurveTo(vertArray[1][0], vertArray[1][1],\n        vertArray[2][0], vertArray[2][1],\n        vertArray[2][0], vertArray[2][1]);\n    } else if (vertArrayLength == 2) {\n      path = this._line(vertArray[0][0], vertArray[0][1], vertArray[1][0], vertArray[1][1], path);\n    }\n    return path;\n  }\n}\n\nclass WiresPath {\n  constructor() {\n    this.p = \"\";\n  }\n\n  get value() {\n    return this.p.trim();\n  }\n\n  moveTo(x, y) {\n    this.p += \"M \" + x + \" \" + y + \" \";\n  }\n\n  bcurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n    this.p += \"C \" + cp1x + \" \" + cp1y + \", \" + cp2x + \" \" + cp2y + \", \" + x + \" \" + y + \" \";\n  }\n}\n\nexport const wired = new Wires();","import { LitElement, html } from '@polymer/lit-element/lit-element.js';\nimport { wired } from 'wired-lib/wired-lib.js';\n\nexport class WiredButton extends LitElement {\n  static get properties() {\n    return {\n      elevation: Number,\n      disabled: Boolean\n    };\n  }\n\n  constructor() {\n    super();\n    this.elevation = 1;\n    this.disabled = false;\n  }\n\n  _createRoot() {\n    const root = this.attachShadow({ mode: 'open' });\n    this.classList.add('pending');\n    return root;\n  }\n\n  _render({ text, elevation, disabled }) {\n    this._onDisableChange();\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n        font-family: inherit;\n        cursor: pointer;\n        padding: 8px 10px;\n        position: relative;\n        text-align: center;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n        justify-content: center;\n        flex-direction: column;\n        text-align: center;\n        display: inline-flex;\n      }\n\n      :host(.pending) {\n        opacity: 0;\n      }\n\n      :host(:active) path {\n        transform: scale(0.97) translate(1.5%, 1.5%);\n      }\n\n      :host(.disabled) {\n        opacity: 0.6 !important;\n        background: rgba(0, 0, 0, 0.07);\n        cursor: default;\n        pointer-events: none;\n      }\n\n      .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        pointer-events: none;\n      }\n\n      svg {\n        display: block;\n      }\n\n      path {\n        stroke: currentColor;\n        stroke-width: 0.7;\n        fill: transparent;\n        transition: transform 0.05s ease;\n      }\n    </style>\n    <slot></slot>\n    <div class=\"overlay\">\n      <svg id=\"svg\"></svg>\n    </div>\n    `;\n  }\n\n  _onDisableChange() {\n    if (this.disabled) {\n      this.classList.add(\"disabled\");\n    } else {\n      this.classList.remove(\"disabled\");\n    }\n    this.tabIndex = this.disabled ? -1 : (this.getAttribute('tabindex') || 0);\n  }\n\n  _clearNode(node) {\n    while (node.hasChildNodes()) {\n      node.removeChild(node.lastChild);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    setTimeout(() => this._didRender());\n    this.addEventListener('keydown', (event) => {\n      if ((event.keyCode === 13) || (event.keyCode === 32)) {\n        event.preventDefault();\n        this.click();\n      }\n    });\n    this.setAttribute('role', 'button');\n    this.setAttribute('aria-label', this.innerHTML);\n  }\n\n  _didRender() {\n    const svg = this.shadowRoot.getElementById('svg');\n    this._clearNode(svg);\n    const s = this.getBoundingClientRect();\n    const elev = Math.min(Math.max(1, this.elevation), 5);\n    const w = s.width + ((elev - 1) * 2);\n    const h = s.height + ((elev - 1) * 2);\n    svg.setAttribute(\"width\", w);\n    svg.setAttribute(\"height\", h);\n    wired.rectangle(svg, 0, 0, s.width, s.height);\n    for (var i = 1; i < elev; i++) {\n      (wired.line(svg, (i * 2), s.height + (i * 2), s.width + (i * 2), s.height + (i * 2))).style.opacity = (75 - (i * 10)) / 100;\n      (wired.line(svg, s.width + (i * 2), s.height + (i * 2), s.width + (i * 2), i * 2)).style.opacity = (75 - (i * 10)) / 100;\n      (wired.line(svg, (i * 2), s.height + (i * 2), s.width + (i * 2), s.height + (i * 2))).style.opacity = (75 - (i * 10)) / 100;\n      (wired.line(svg, s.width + (i * 2), s.height + (i * 2), s.width + (i * 2), i * 2)).style.opacity = (75 - (i * 10)) / 100;\n    }\n    this.classList.remove('pending');\n  }\n}\n\ncustomElements.define('wired-button', WiredButton);","import { LitElement, html } from '@polymer/lit-element/lit-element.js';\nimport { wired } from 'wired-lib/wired-lib.js';\n\nexport class WiredInput extends LitElement {\n  static get properties() {\n    return {\n      placeholder: String,\n      name: String,\n      disabled: Boolean,\n      type: String,\n      required: Boolean,\n      autocomplete: String,\n      autofocus: Boolean,\n      minlength: Number,\n      maxlength: Number,\n      min: String,\n      max: String,\n      step: String,\n      readonly: Boolean,\n      size: Number,\n      autocapitalize: String,\n      autocorrect: String,\n      value: String\n    };\n  }\n\n  constructor() {\n    super();\n    this.disabled = false;\n  }\n\n  _createRoot() {\n    const root = this.attachShadow({ mode: 'open', delegatesFocus: true });\n    this.classList.add('pending');\n    return root;\n  }\n\n  _render({ type, placeholder, disabled, required, autocomplete, autofocus, minlength, maxlength, min, max, step, readonly, size, autocapitalize, autocorrect, name }) {\n    this._onDisableChange();\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        padding: 5px;\n        font-family: sans-serif;\n        width: 150px;\n        outline: none;\n      }\n    \n      :host(.pending) {\n        opacity: 0;\n      }\n    \n      :host(.disabled) {\n        opacity: 0.6 !important;\n        cursor: default;\n        pointer-events: none;\n      }\n    \n      :host(.disabled) svg {\n        background: rgba(0, 0, 0, 0.07);\n      }\n    \n      .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        pointer-events: none;\n      }\n    \n      svg {\n        display: block;\n      }\n    \n      path {\n        stroke: currentColor;\n        stroke-width: 0.7;\n        fill: transparent;\n      }\n    \n      input {\n        display: block;\n        width: 100%;\n        box-sizing: border-box;\n        outline: none;\n        border: none;\n        font-family: inherit;\n        font-size: inherit;\n        font-weight: inherit;\n        color: inherit;\n      }\n    </style>\n    <input id=\"txt\" name$=\"${name}\" type$=\"${type}\" placeholder$=\"${placeholder}\" disabled?=\"${disabled}\" required?=\"${required}\"\n      autocomplete$=\"${autocomplete}\" autofocus?=\"${autofocus}\" minlength$=\"${minlength}\" maxlength$=\"${maxlength}\" min$=\"${min}\"\n      max$=\"${max}\" step$=\"${step}\" readonly?=\"${readonly}\" size$=\"${size}\" autocapitalize$=\"${autocapitalize}\" autocorrect$=\"${autocorrect}\"\n      on-change=\"${(e) => this._onChange(e)}\">\n    <div class=\"overlay\">\n      <svg id=\"svg\"></svg>\n    </div>\n    `;\n  }\n\n  get input() {\n    return this.shadowRoot.getElementById('txt');\n  }\n\n  get value() {\n    const input = this.input;\n    return (input && input.value) || '';\n  }\n\n  set value(v) {\n    if (this.shadowRoot) {\n      const input = this.input;\n      if (input) {\n        input.value = v;\n      }\n    } else {\n      this._value = v;\n    }\n  }\n\n  _onDisableChange() {\n    if (this.disabled) {\n      this.classList.add(\"disabled\");\n    } else {\n      this.classList.remove(\"disabled\");\n    }\n  }\n\n  _onChange(event) {\n    event.stopPropagation();\n    const newEvent = new CustomEvent(event.type, { bubbles: true, composed: true, cancelable: event.cancelable, detail: { sourceEvent: event } });\n    this.dispatchEvent(newEvent);\n  }\n\n  _clearNode(node) {\n    while (node.hasChildNodes()) {\n      node.removeChild(node.lastChild);\n    }\n  }\n\n  _didRender() {\n    const svg = this.shadowRoot.getElementById('svg');\n    this._clearNode(svg);\n    const s = this.getBoundingClientRect();\n    svg.setAttribute(\"width\", s.width);\n    svg.setAttribute(\"height\", s.height);\n    wired.rectangle(svg, 0, 0, s.width, s.height);\n    this.classList.remove('pending');\n    if (typeof this._value !== 'undefined') {\n      this.input.value = this._value;\n      delete this._value;\n    }\n  }\n}\ncustomElements.define('wired-input', WiredInput);","import rough from 'roughjs';\n\ntype RoughCanvas = ReturnType<typeof rough.canvas>;\n\nconst CELL_SIZE = 20;\nconst X = (x: number) => x * CELL_SIZE + CELL_SIZE / 2;\nconst Y = (y: number) => y * CELL_SIZE + CELL_SIZE / 2;\n\ntype Point = [number, number];\ntype LineEndStyle = 'arrow' | 'circle';\n\ninterface Figure {\n  draw(rc: RoughCanvas, ctx: CanvasRenderingContext2D): any;\n}\n\nclass Line {\n  constructor(\n    public x0: number,\n    public y0: number,\n    readonly start: LineEndStyle | null,\n    public x1: number,\n    public y1: number,\n    readonly end: LineEndStyle | null,\n    readonly color: string\n  ) {}\n\n  draw(rc: RoughCanvas) {\n    // TODO\n    rc.line(X(this.x0), Y(this.y0), X(this.x1), Y(this.y1), {\n      fill: this.color,\n      roughness: 1.5,\n      stroke: this.color,\n      strokeWidth: 2,\n    });\n    this.ending(rc, this.start, X(this.x1), Y(this.y1), X(this.x0), Y(this.y0));\n    this.ending(rc, this.end, X(this.x0), Y(this.y0), X(this.x1), Y(this.y1));\n  }\n\n  private ending(\n    rc: RoughCanvas,\n    type: LineEndStyle | null,\n    x0: number,\n    y0: number,\n    x1: number,\n    y1: number\n  ) {\n    switch (type) {\n      case 'circle':\n        // TODO: define roughness option\n        rc.circle(x1, y1, 10, {\n          fill: this.color,\n          fillWeight: 3,\n        });\n        break;\n      case 'arrow':\n        this.arrowhead(rc, x0, y0, x1, y1);\n        break;\n    }\n  }\n\n  private arrowhead(rc: RoughCanvas, x0: number, y0: number, x1: number, y1: number) {\n    const dx = x0 - x1;\n    const dy = y0 - y1;\n\n    let alpha = Math.atan(dy / dx);\n\n    if (dy === 0) {\n      alpha = dx < 0 ? -Math.PI : 0;\n    }\n\n    const alpha3 = alpha + 0.5;\n    const alpha4 = alpha - 0.5;\n\n    const l3 = 20;\n    const x3 = x1 + l3 * Math.cos(alpha3);\n    const y3 = y1 + l3 * Math.sin(alpha3);\n\n    const l4 = 20;\n    const x4 = x1 + l4 * Math.cos(alpha4);\n    const y4 = y1 + l4 * Math.sin(alpha4);\n\n    rc.linearPath([[x3, y3], [x1, y1], [x4, y4]], {\n      bowing: 1,\n      fill: this.color,\n      stroke: this.color,\n      strokeWidth: 2,\n    });\n  }\n}\n\nclass Text {\n  constructor(\n    readonly x0: number,\n    readonly y0: number,\n    public text: string,\n    readonly color: string\n  ) {}\n\n  draw(rc: RoughCanvas, ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = this.color;\n    ctx.fillText(this.text, X(this.x0), Y(this.y0));\n  }\n}\n\nfunction parseASCIIArt(source: string) {\n  const lines = source.split('\\n');\n\n  const height = lines.length;\n  const width = lines.reduce((w, line) => Math.max(w, line.length), 0);\n\n  const data = new Array<string[]>(height); // Matrix containing ASCII art.\n\n  // Get a character from the array or null if we are out of bounds.\n  // Useful in places where we inspect character's neighbors and peek\n  // out of bounds for boundary characters.\n  const at = (y: number, x: number) =>\n    0 <= y && y < height && 0 <= x && x < width ? data[y][x] : null;\n\n  // Convert strings into a mutable matrix of characters.\n  for (let y = 0; y < height; y++) {\n    const line = lines[y];\n    data[y] = new Array(width);\n    for (let x = 0; x < line.length; x++) {\n      data[y][x] = line[x];\n    }\n    for (let x = line.length; x < width; x++) {\n      data[y][x] = ' ';\n    }\n  }\n\n  // Converts line's character to the direction of line's growth.\n  const dir: {[name: string]: Point} = {'-': [1, 0], '|': [0, 1]};\n\n  const figures: Figure[] = []; // List of extracted figures.\n\n  while (extractLine()) {\n    continue;\n  } // Extract all lines.\n  extractText(); // Extract all text.\n\n  return figures;\n\n  // Extract a single line and erase it from the ascii art matrix.\n  function extractLine() {\n    const ch = findLineChar();\n    if (ch == null) {\n      return false;\n    }\n    let [x0, y0] = ch;\n\n    const d = dir[data[y0][x0]];\n\n    // Find line's start by advancing in the oposite direction.\n    let color: string | undefined;\n    while (isPartOfLine(x0 - d[0], y0 - d[1])) {\n      x0 -= d[0];\n      y0 -= d[1];\n      if (color == null) {\n        color = toColor(x0, y0);\n      }\n    }\n\n    let start: LineEndStyle | null = null;\n    if (isLineEnding(x0 - d[0], y0 - d[1])) {\n      // Line has a decorated start. Extract is as well.\n      x0 -= d[0];\n      y0 -= d[1];\n      start = data[y0][x0] === '*' ? 'circle' : 'arrow';\n    }\n\n    // Find line's end by advancing forward in the given direction.\n    let [x1, y1] = ch;\n    while (isPartOfLine(x1 + d[0], y1 + d[1])) {\n      x1 += d[0];\n      y1 += d[1];\n      if (color == null) {\n        color = toColor(x1, y1);\n      }\n    }\n\n    let end: LineEndStyle | null = null;\n    if (isLineEnding(x1 + d[0], y1 + d[1])) {\n      // Line has a decorated end. Extract it.\n      x1 += d[0];\n      y1 += d[1];\n      end = data[y1][x1] === '*' ? 'circle' : 'arrow';\n    }\n\n    // Create line object and erase line from the ascii art matrix.\n    const line = new Line(x0, y0, start, x1, y1, end, color == null ? 'black' : color);\n    figures.push(line);\n    erase(line);\n\n    // Adjust line start and end to accomodate for arrow endings.\n    // Those should not intersect with their targets but should touch them\n    // instead. Should be done after erasure to ensure that erase deletes\n    // arrowheads.\n    if (start === 'arrow') {\n      line.x0 -= d[0];\n      line.y0 -= d[1];\n    }\n\n    if (end === 'arrow') {\n      line.x1 += d[0];\n      line.y1 += d[1];\n    }\n\n    return true;\n  }\n\n  // Extract all non space characters that were left after line extraction\n  // as text objects.\n  function extractText() {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (data[y][x] !== ' ') {\n          // Find the end of the text annotation by searching for a space.\n          const start = x;\n          let end = x;\n          while (end < width && data[y][end] !== ' ') {\n            end++;\n          }\n\n          let text = data[y].slice(start, end).join('');\n\n          // Check if it can be concatenated with a previously found text annotation.\n          const prev = figures[figures.length - 1];\n          if (prev instanceof Text && prev.x0 + prev.text.length + 1 === start) {\n            // If they touch concatentate them.\n            prev.text = `${prev.text} ${text}`;\n          } else {\n            // Look for a grey color modifiers.\n            let color = 'black';\n            if (text[0] === '\\\\' && text[text.length - 1] === '\\\\') {\n              text = text.substring(1, text.length - 1);\n              color = '#666';\n            }\n            figures.push(new Text(x, y, text, color));\n          }\n          x = end;\n        }\n      }\n    }\n  }\n\n  // Returns true iff the character can be part of the line.\n  function isPartOfLine(x: number, y: number) {\n    const c = at(y, x);\n    return c === '|' || c === '-' || c === '+' || c === '~' || c === '!';\n  }\n\n  // If character represents a color modifier returns CSS color.\n  function toColor(x: number, y: number): string | undefined {\n    switch (at(y, x)) {\n      case '~':\n      case '!':\n        return '#666';\n    }\n    return;\n  }\n\n  // Returns true iff characters is line ending decoration.\n  function isLineEnding(x: number, y: number) {\n    const c = at(y, x);\n    return c === '*' || c === '<' || c === '>' || c === '^' || c === 'v';\n  }\n\n  // Finds a character that belongs to unextracted line.\n  function findLineChar(): Point | undefined {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        if (data[y][x] === '|' || data[y][x] === '-') {\n          return [x, y];\n        }\n      }\n    }\n    return;\n  }\n\n  // Erases character that belongs to the extracted line.\n  function eraseChar(x: number, y: number, dx: number, dy: number) {\n    switch (at(y, x)) {\n      case '|':\n      case '-':\n      case '*':\n      case '>':\n      case '<':\n      case '^':\n      case 'v':\n      case '~':\n      case '!':\n        data[y][x] = ' ';\n        return;\n      case '+':\n        dx = 1 - dx;\n        dy = 1 - dy;\n\n        data[y][x] = ' ';\n        switch (at(y - dy, x - dx)) {\n          case '|':\n          case '!':\n          case '+':\n            data[y][x] = '|';\n            return;\n          case '-':\n          case '~':\n          case '+':\n            data[y][x] = '-';\n            return;\n        }\n\n        switch (at(y + dy, x + dx)) {\n          case '|':\n          case '!':\n          case '+':\n            data[y][x] = '|';\n            return;\n          case '-':\n          case '~':\n          case '+':\n            data[y][x] = '-';\n            return;\n        }\n        return;\n    }\n  }\n\n  // Erase the given extracted line.\n  function erase(line: Line) {\n    const dx = line.x0 !== line.x1 ? 1 : 0;\n    const dy = line.y0 !== line.y1 ? 1 : 0;\n\n    if (dx !== 0 || dy !== 0) {\n      let x = line.x0 + dx,\n        y = line.y0 + dy;\n      const x_ = line.x1 - dx,\n        y_ = line.y1 - dy;\n      while (x <= x_ && y <= y_) {\n        eraseChar(x, y, dx, dy);\n        x += dx;\n        y += dy;\n      }\n      eraseChar(line.x0, line.y0, dx, dy);\n      eraseChar(line.x1, line.y1, dx, dy);\n    } else {\n      eraseChar(line.x0, line.y0, dx, dy);\n    }\n  }\n}\n\nexport function drawDiagram(\n  source: string,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  canvasContainer: HTMLElement\n): void {\n  const ctx = canvas.getContext('2d')!;\n\n  const figures = parseASCIIArt(source);\n\n  let width = 0;\n  let height = 0;\n  for (const figure of figures) {\n    if (figure instanceof Line) {\n      width = Math.max(width, X(figure.x1 + 1));\n      height = Math.max(height, Y(figure.y1 + 1));\n    }\n  }\n\n  const dpr = window.devicePixelRatio;\n  // 1780 x 1780\n  const naturalWidth = width * dpr;\n  const naturalHeight = height * dpr;\n\n  // 990 x 813\n  const {clientWidth, clientHeight} = canvasContainer;\n\n  let scaleFactor = 1;\n  let displayWidth = width;\n  let displayHeight = height;\n  if (displayWidth > clientWidth || displayHeight > clientHeight) {\n    // need further downscale\n    scaleFactor = 1 / Math.max(displayWidth / clientWidth, displayHeight / clientHeight);\n    displayWidth *= scaleFactor;\n    displayHeight *= scaleFactor;\n  }\n  canvas.width = naturalWidth;\n  canvas.height = naturalHeight;\n  canvas.style.width = `${displayWidth}px`;\n  canvas.style.height = `${displayHeight}px`;\n  ctx.scale(dpr * scaleFactor, dpr * scaleFactor);\n\n  ctx.textBaseline = 'middle';\n  ctx.font = `20pt 'Gloria Hallelujah'`;\n\n  for (const figure of figures) {\n    figure.draw(rc, ctx);\n  }\n}\n","import rough from 'roughjs';\nimport WebFont from 'webfontloader';\nimport 'wired-button';\nimport 'wired-input';\n\nimport {drawDiagram} from './diagram';\n\nWebFont.load({\n  active: main,\n  google: {\n    families: ['Gloria Hallelujah'],\n  },\n});\n\nfunction rafThrottle<A extends []>(callback: (...args: A) => any) {\n  let requestId: number | undefined | null;\n  return (...args: any[]) => {\n    if (requestId == null) {\n      requestId = requestAnimationFrame(() => {\n        requestId = null;\n        callback.apply(null, args);\n      });\n    }\n  };\n}\n\nfunction main() {\n  const textarea = document.querySelector<HTMLTextAreaElement>('#textarea')!;\n  const canvas = document.querySelector<HTMLCanvasElement>('#canvas')!;\n  const rc = rough.canvas(canvas);\n  const nameInput = document.querySelector<HTMLInputElement>('#name')!;\n  const canvasContainer = document.querySelector<HTMLElement>('#canvas-container')!;\n  const draw = rafThrottle(() => drawDiagram(textarea.value, rc, canvas, canvasContainer));\n\n  document.querySelector<HTMLButtonElement>('#save')!.onclick = () => {\n    // TODO: choose resolution?\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      const anchor = document.createElement('a');\n      anchor.setAttribute('download', nameInput.value);\n      anchor.href = url;\n      setTimeout(() => {\n        URL.revokeObjectURL(url);\n      }, 1000);\n      anchor.click();\n    }, 'image/png');\n  };\n  window.addEventListener('resize', draw);\n  document.querySelector<HTMLTextAreaElement>('#textarea')!.onchange = draw;\n  draw();\n}\n"]}